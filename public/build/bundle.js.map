{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte-spa-router/wrap.js","../../node_modules/svelte/store/index.mjs","../../node_modules/regexparam/dist/index.mjs","../../node_modules/svelte-spa-router/Router.svelte","../../src/pages/Home.svelte","../../node_modules/nanoid/index.browser.js","../../src/lib/editor/classes/DocumentNode.js","../../node_modules/@steeze-ui/svelte-icon/Icon.svelte","../../node_modules/@steeze-ui/heroicons/index.js","../../src/lib/editor/sidebar/DocumentNodeElement.svelte","../../src/lib/editor/sidebar/Sidebar.svelte","../../src/lib/editor/classes/Project.js","../../src/lib/editor/page/DocumentPage.svelte","../../src/pages/Editor.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root.host) {\n        return root;\n    }\n    return document;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => svg ? svg_element(name) : element(name));\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.42.1' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","/**\n * @typedef {Object} WrappedComponent Object returned by the `wrap` method\n * @property {SvelteComponent} component - Component to load (this is always asynchronous)\n * @property {RoutePrecondition[]} [conditions] - Route pre-conditions to validate\n * @property {Object} [props] - Optional dictionary of static props\n * @property {Object} [userData] - Optional user data dictionary\n * @property {bool} _sveltesparouter - Internal flag; always set to true\n */\n\n/**\n * @callback AsyncSvelteComponent\n * @returns {Promise<SvelteComponent>} Returns a Promise that resolves with a Svelte component\n */\n\n/**\n * @callback RoutePrecondition\n * @param {RouteDetail} detail - Route detail object\n * @returns {boolean|Promise<boolean>} If the callback returns a false-y value, it's interpreted as the precondition failed, so it aborts loading the component (and won't process other pre-condition callbacks)\n */\n\n/**\n * @typedef {Object} WrapOptions Options object for the call to `wrap`\n * @property {SvelteComponent} [component] - Svelte component to load (this is incompatible with `asyncComponent`)\n * @property {AsyncSvelteComponent} [asyncComponent] - Function that returns a Promise that fulfills with a Svelte component (e.g. `{asyncComponent: () => import('Foo.svelte')}`)\n * @property {SvelteComponent} [loadingComponent] - Svelte component to be displayed while the async route is loading (as a placeholder); when unset or false-y, no component is shown while component\n * @property {object} [loadingParams] - Optional dictionary passed to the `loadingComponent` component as params (for an exported prop called `params`)\n * @property {object} [userData] - Optional object that will be passed to events such as `routeLoading`, `routeLoaded`, `conditionsFailed`\n * @property {object} [props] - Optional key-value dictionary of static props that will be passed to the component. The props are expanded with {...props}, so the key in the dictionary becomes the name of the prop.\n * @property {RoutePrecondition[]|RoutePrecondition} [conditions] - Route pre-conditions to add, which will be executed in order\n */\n\n/**\n * Wraps a component to enable multiple capabilities:\n * 1. Using dynamically-imported component, with (e.g. `{asyncComponent: () => import('Foo.svelte')}`), which also allows bundlers to do code-splitting.\n * 2. Adding route pre-conditions (e.g. `{conditions: [...]}`)\n * 3. Adding static props that are passed to the component\n * 4. Adding custom userData, which is passed to route events (e.g. route loaded events) or to route pre-conditions (e.g. `{userData: {foo: 'bar}}`)\n * \n * @param {WrapOptions} args - Arguments object\n * @returns {WrappedComponent} Wrapped component\n */\nexport function wrap(args) {\n    if (!args) {\n        throw Error('Parameter args is required')\n    }\n\n    // We need to have one and only one of component and asyncComponent\n    // This does a \"XNOR\"\n    if (!args.component == !args.asyncComponent) {\n        throw Error('One and only one of component and asyncComponent is required')\n    }\n\n    // If the component is not async, wrap it into a function returning a Promise\n    if (args.component) {\n        args.asyncComponent = () => Promise.resolve(args.component)\n    }\n\n    // Parameter asyncComponent and each item of conditions must be functions\n    if (typeof args.asyncComponent != 'function') {\n        throw Error('Parameter asyncComponent must be a function')\n    }\n    if (args.conditions) {\n        // Ensure it's an array\n        if (!Array.isArray(args.conditions)) {\n            args.conditions = [args.conditions]\n        }\n        for (let i = 0; i < args.conditions.length; i++) {\n            if (!args.conditions[i] || typeof args.conditions[i] != 'function') {\n                throw Error('Invalid parameter conditions[' + i + ']')\n            }\n        }\n    }\n\n    // Check if we have a placeholder component\n    if (args.loadingComponent) {\n        args.asyncComponent.loading = args.loadingComponent\n        args.asyncComponent.loadingParams = args.loadingParams || undefined\n    }\n\n    // Returns an object that contains all the functions to execute too\n    // The _sveltesparouter flag is to confirm the object was created by this router\n    const obj = {\n        component: args.asyncComponent,\n        userData: args.userData,\n        conditions: (args.conditions && args.conditions.length) ? args.conditions : undefined,\n        props: (args.props && Object.keys(args.props).length) ? args.props : {},\n        _sveltesparouter: true\n    }\n\n    return obj\n}\n\nexport default wrap\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","export function parse(str, loose) {\n\tif (str instanceof RegExp) return { keys:false, pattern:str };\n\tvar c, o, tmp, ext, keys=[], pattern='', arr = str.split('/');\n\tarr[0] || arr.shift();\n\n\twhile (tmp = arr.shift()) {\n\t\tc = tmp[0];\n\t\tif (c === '*') {\n\t\t\tkeys.push('wild');\n\t\t\tpattern += '/(.*)';\n\t\t} else if (c === ':') {\n\t\t\to = tmp.indexOf('?', 1);\n\t\t\text = tmp.indexOf('.', 1);\n\t\t\tkeys.push( tmp.substring(1, !!~o ? o : !!~ext ? ext : tmp.length) );\n\t\t\tpattern += !!~o && !~ext ? '(?:/([^/]+?))?' : '/([^/]+?)';\n\t\t\tif (!!~ext) pattern += (!!~o ? '?' : '') + '\\\\' + tmp.substring(ext);\n\t\t} else {\n\t\t\tpattern += '/' + tmp;\n\t\t}\n\t}\n\n\treturn {\n\t\tkeys: keys,\n\t\tpattern: new RegExp('^' + pattern + (loose ? '(?=$|\\/)' : '\\/?$'), 'i')\n\t};\n}\n\nvar RGX = /*#__PURE__*/ /(\\/|^)([:*][^/]*?)(\\?)?(?=[/.]|$)/g;\n\n// error if key missing?\nexport function inject(route, values) {\n\treturn route.replace(RGX, (x, lead, key, optional) => {\n\t\tx = values[key=='*' ? 'wild' : key.substring(1)];\n\t\treturn x ? '/'+x : (optional || key=='*') ? '' : '/' + key;\n\t});\n}\n","<script context=\"module\">\nimport {readable, writable, derived} from 'svelte/store'\nimport {tick} from 'svelte'\nimport {wrap as _wrap} from './wrap'\n\n/**\n * Wraps a component to add route pre-conditions.\n * @deprecated Use `wrap` from `svelte-spa-router/wrap` instead. This function will be removed in a later version.\n * \n * @param {SvelteComponent} component - Svelte component for the route\n * @param {object} [userData] - Optional object that will be passed to each `conditionsFailed` event\n * @param {...function(RouteDetail): boolean} conditions - Route pre-conditions to add, which will be executed in order\n * @returns {WrappedComponent} Wrapped component\n */\nexport function wrap(component, userData, ...conditions) {\n    // Use the new wrap method and show a deprecation warning\n    // eslint-disable-next-line no-console\n    console.warn('Method `wrap` from `svelte-spa-router` is deprecated and will be removed in a future version. Please use `svelte-spa-router/wrap` instead. See http://bit.ly/svelte-spa-router-upgrading')\n    return _wrap({\n        component,\n        userData,\n        conditions\n    })\n}\n\n/**\n * @typedef {Object} Location\n * @property {string} location - Location (page/view), for example `/book`\n * @property {string} [querystring] - Querystring from the hash, as a string not parsed\n */\n/**\n * Returns the current location from the hash.\n *\n * @returns {Location} Location object\n * @private\n */\nfunction getLocation() {\n    const hashPosition = window.location.href.indexOf('#/')\n    let location = (hashPosition > -1) ? window.location.href.substr(hashPosition + 1) : '/'\n\n    // Check if there's a querystring\n    const qsPosition = location.indexOf('?')\n    let querystring = ''\n    if (qsPosition > -1) {\n        querystring = location.substr(qsPosition + 1)\n        location = location.substr(0, qsPosition)\n    }\n\n    return {location, querystring}\n}\n\n/**\n * Readable store that returns the current full location (incl. querystring)\n */\nexport const loc = readable(\n    null,\n    // eslint-disable-next-line prefer-arrow-callback\n    function start(set) {\n        set(getLocation())\n\n        const update = () => {\n            set(getLocation())\n        }\n        window.addEventListener('hashchange', update, false)\n\n        return function stop() {\n            window.removeEventListener('hashchange', update, false)\n        }\n    }\n)\n\n/**\n * Readable store that returns the current location\n */\nexport const location = derived(\n    loc,\n    ($loc) => $loc.location\n)\n\n/**\n * Readable store that returns the current querystring\n */\nexport const querystring = derived(\n    loc,\n    ($loc) => $loc.querystring\n)\n\n/**\n * Store that returns the currently-matched params.\n * Despite this being writable, consumers should not change the value of the store.\n * It is exported as a readable store only (in the typings file)\n */\nexport const params = writable(undefined)\n\n/**\n * Navigates to a new page programmatically.\n *\n * @param {string} location - Path to navigate to (must start with `/` or '#/')\n * @return {Promise<void>} Promise that resolves after the page navigation has completed\n */\nexport async function push(location) {\n    if (!location || location.length < 1 || (location.charAt(0) != '/' && location.indexOf('#/') !== 0)) {\n        throw Error('Invalid parameter location')\n    }\n\n    // Execute this code when the current call stack is complete\n    await tick()\n\n    // Note: this will include scroll state in history even when restoreScrollState is false\n    history.replaceState({...history.state, __svelte_spa_router_scrollX: window.scrollX, __svelte_spa_router_scrollY: window.scrollY}, undefined, undefined)      \n    window.location.hash = (location.charAt(0) == '#' ? '' : '#') + location\n}\n\n/**\n * Navigates back in history (equivalent to pressing the browser's back button).\n * \n * @return {Promise<void>} Promise that resolves after the page navigation has completed\n */\nexport async function pop() {\n    // Execute this code when the current call stack is complete\n    await tick()\n\n    window.history.back()\n}\n\n/**\n * Replaces the current page but without modifying the history stack.\n *\n * @param {string} location - Path to navigate to (must start with `/` or '#/')\n * @return {Promise<void>} Promise that resolves after the page navigation has completed\n */\nexport async function replace(location) {\n    if (!location || location.length < 1 || (location.charAt(0) != '/' && location.indexOf('#/') !== 0)) {\n        throw Error('Invalid parameter location')\n    }\n\n    // Execute this code when the current call stack is complete\n    await tick()\n\n    const dest = (location.charAt(0) == '#' ? '' : '#') + location\n    try {\n        const newState = {\n            ...history.state\n        }\n        delete newState['__svelte_spa_router_scrollX']\n        delete newState['__svelte_spa_router_scrollY']\n        window.history.replaceState(newState, undefined, dest)\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.warn('Caught exception while replacing the current page. If you\\'re running this in the Svelte REPL, please note that the `replace` method might not work in this environment.')\n    }\n\n    // The method above doesn't trigger the hashchange event, so let's do that manually\n    window.dispatchEvent(new Event('hashchange'))\n}\n\n/**\n * Dictionary with options for the link action.\n * @typedef {Object} LinkActionOpts\n * @property {string} href - A string to use in place of the link's href attribute. Using this allows for updating link's targets reactively.\n * @property {boolean} disabled - If true, link is disabled\n */\n\n/**\n * Svelte Action that enables a link element (`<a>`) to use our history management.\n *\n * For example:\n *\n * ````html\n * <a href=\"/books\" use:link>View books</a>\n * ````\n *\n * @param {HTMLElement} node - The target node (automatically set by Svelte). Must be an anchor tag (`<a>`) with a href attribute starting in `/`\n * @param {string|LinkActionOpts} opts - Options object. For legacy reasons, we support a string too which will be the value for opts.href\n */\nexport function link(node, opts) {\n    opts = linkOpts(opts)\n\n    // Only apply to <a> tags\n    if (!node || !node.tagName || node.tagName.toLowerCase() != 'a') {\n        throw Error('Action \"link\" can only be used with <a> tags')\n    }\n\n    updateLink(node, opts)\n\n    return {\n        update(updated) {\n            updated = linkOpts(updated)\n            updateLink(node, updated)\n        }\n    }\n}\n\n// Internal function used by the link function\nfunction updateLink(node, opts) {\n    let href = opts.href || node.getAttribute('href')\n\n    // Destination must start with '/' or '#/'\n    if (href && href.charAt(0) == '/') {\n        // Add # to the href attribute\n        href = '#' + href\n    }\n    else if (!href || href.length < 2 || href.slice(0, 2) != '#/') {\n        throw Error('Invalid value for \"href\" attribute: ' + href)\n    }\n\n    node.setAttribute('href', href)\n    node.addEventListener('click', (event) => {\n        // Prevent default anchor onclick behaviour\n        event.preventDefault()\n        if (!opts.disabled) {\n            scrollstateHistoryHandler(event.currentTarget.getAttribute('href'))\n        }\n    })\n}\n\n// Internal function that ensures the argument of the link action is always an object\nfunction linkOpts(val) {\n    if (val && typeof val == 'string') {\n        return {\n            href: val\n        }\n    }\n    else {\n        return val || {}\n    }\n}\n\n/**\n * The handler attached to an anchor tag responsible for updating the\n * current history state with the current scroll state\n *\n * @param {string} href - Destination\n */\nfunction scrollstateHistoryHandler(href) {\n    // Setting the url (3rd arg) to href will break clicking for reasons, so don't try to do that\n    history.replaceState({...history.state, __svelte_spa_router_scrollX: window.scrollX, __svelte_spa_router_scrollY: window.scrollY}, undefined, undefined)\n    // This will force an update as desired, but this time our scroll state will be attached\n    window.location.hash = href\n}\n</script>\n\n{#if componentParams}\n    <svelte:component\n    this=\"{component}\"\n    params=\"{componentParams}\"\n    on:routeEvent\n    {...props}\n    />\n{:else}\n    <svelte:component\n    this=\"{component}\"\n    on:routeEvent\n    {...props}\n    />\n{/if}\n\n<script>\nimport {onDestroy, createEventDispatcher, afterUpdate} from 'svelte'\nimport {parse} from 'regexparam'\n\n/**\n * Dictionary of all routes, in the format `'/path': component`.\n *\n * For example:\n * ````js\n * import HomeRoute from './routes/HomeRoute.svelte'\n * import BooksRoute from './routes/BooksRoute.svelte'\n * import NotFoundRoute from './routes/NotFoundRoute.svelte'\n * routes = {\n *     '/': HomeRoute,\n *     '/books': BooksRoute,\n *     '*': NotFoundRoute\n * }\n * ````\n */\nexport let routes = {}\n\n/**\n * Optional prefix for the routes in this router. This is useful for example in the case of nested routers.\n */\nexport let prefix = ''\n\n/**\n * If set to true, the router will restore scroll positions on back navigation\n * and scroll to top on forward navigation.\n */\nexport let restoreScrollState = false\n\n/**\n * Container for a route: path, component\n */\nclass RouteItem {\n    /**\n     * Initializes the object and creates a regular expression from the path, using regexparam.\n     *\n     * @param {string} path - Path to the route (must start with '/' or '*')\n     * @param {SvelteComponent|WrappedComponent} component - Svelte component for the route, optionally wrapped\n     */\n    constructor(path, component) {\n        if (!component || (typeof component != 'function' && (typeof component != 'object' || component._sveltesparouter !== true))) {\n            throw Error('Invalid component object')\n        }\n\n        // Path must be a regular or expression, or a string starting with '/' or '*'\n        if (!path || \n            (typeof path == 'string' && (path.length < 1 || (path.charAt(0) != '/' && path.charAt(0) != '*'))) ||\n            (typeof path == 'object' && !(path instanceof RegExp))\n        ) {\n            throw Error('Invalid value for \"path\" argument - strings must start with / or *')\n        }\n\n        const {pattern, keys} = parse(path)\n\n        this.path = path\n\n        // Check if the component is wrapped and we have conditions\n        if (typeof component == 'object' && component._sveltesparouter === true) {\n            this.component = component.component\n            this.conditions = component.conditions || []\n            this.userData = component.userData\n            this.props = component.props || {}\n        }\n        else {\n            // Convert the component to a function that returns a Promise, to normalize it\n            this.component = () => Promise.resolve(component)\n            this.conditions = []\n            this.props = {}\n        }\n\n        this._pattern = pattern\n        this._keys = keys\n    }\n\n    /**\n     * Checks if `path` matches the current route.\n     * If there's a match, will return the list of parameters from the URL (if any).\n     * In case of no match, the method will return `null`.\n     *\n     * @param {string} path - Path to test\n     * @returns {null|Object.<string, string>} List of paramters from the URL if there's a match, or `null` otherwise.\n     */\n    match(path) {\n        // If there's a prefix, check if it matches the start of the path.\n        // If not, bail early, else remove it before we run the matching.\n        if (prefix) {\n            if (typeof prefix == 'string') {\n                if (path.startsWith(prefix)) {\n                    path = path.substr(prefix.length) || '/'\n                }\n                else {\n                    return null\n                }\n            }\n            else if (prefix instanceof RegExp) {\n                const match = path.match(prefix)\n                if (match && match[0]) {\n                    path = path.substr(match[0].length) || '/'\n                }\n                else {\n                    return null\n                }\n            }\n        }\n\n        // Check if the pattern matches\n        const matches = this._pattern.exec(path)\n        if (matches === null) {\n            return null\n        }\n\n        // If the input was a regular expression, this._keys would be false, so return matches as is\n        if (this._keys === false) {\n            return matches\n        }\n\n        const out = {}\n        let i = 0\n        while (i < this._keys.length) {\n            // In the match parameters, URL-decode all values\n            try {\n                out[this._keys[i]] = decodeURIComponent(matches[i + 1] || '') || null\n            }\n            catch (e) {\n                out[this._keys[i]] = null\n            }\n            i++\n        }\n        return out\n    }\n\n    /**\n     * Dictionary with route details passed to the pre-conditions functions, as well as the `routeLoading`, `routeLoaded` and `conditionsFailed` events\n     * @typedef {Object} RouteDetail\n     * @property {string|RegExp} route - Route matched as defined in the route definition (could be a string or a reguar expression object)\n     * @property {string} location - Location path\n     * @property {string} querystring - Querystring from the hash\n     * @property {object} [userData] - Custom data passed by the user\n     * @property {SvelteComponent} [component] - Svelte component (only in `routeLoaded` events)\n     * @property {string} [name] - Name of the Svelte component (only in `routeLoaded` events)\n     */\n\n    /**\n     * Executes all conditions (if any) to control whether the route can be shown. Conditions are executed in the order they are defined, and if a condition fails, the following ones aren't executed.\n     * \n     * @param {RouteDetail} detail - Route detail\n     * @returns {boolean} Returns true if all the conditions succeeded\n     */\n    async checkConditions(detail) {\n        for (let i = 0; i < this.conditions.length; i++) {\n            if (!(await this.conditions[i](detail))) {\n                return false\n            }\n        }\n\n        return true\n    }\n}\n\n// Set up all routes\nconst routesList = []\nif (routes instanceof Map) {\n    // If it's a map, iterate on it right away\n    routes.forEach((route, path) => {\n        routesList.push(new RouteItem(path, route))\n    })\n}\nelse {\n    // We have an object, so iterate on its own properties\n    Object.keys(routes).forEach((path) => {\n        routesList.push(new RouteItem(path, routes[path]))\n    })\n}\n\n// Props for the component to render\nlet component = null\nlet componentParams = null\nlet props = {}\n\n// Event dispatcher from Svelte\nconst dispatch = createEventDispatcher()\n\n// Just like dispatch, but executes on the next iteration of the event loop\nasync function dispatchNextTick(name, detail) {\n    // Execute this code when the current call stack is complete\n    await tick()\n    dispatch(name, detail)\n}\n\n// If this is set, then that means we have popped into this var the state of our last scroll position\nlet previousScrollState = null\n\n// Update history.scrollRestoration depending on restoreScrollState\n$: history.scrollRestoration = restoreScrollState ? 'manual' : 'auto'\nlet popStateChanged = null\nif (restoreScrollState) {\n    popStateChanged = (event) => {\n        // If this event was from our history.replaceState, event.state will contain\n        // our scroll history. Otherwise, event.state will be null (like on forward\n        // navigation)\n        if (event.state && event.state.__svelte_spa_router_scrollY) {\n            previousScrollState = event.state\n        }\n        else {\n            previousScrollState = null\n        }\n    }\n    // This is removed in the destroy() invocation below\n    window.addEventListener('popstate', popStateChanged)\n\n    afterUpdate(() => {\n        // If this exists, then this is a back navigation: restore the scroll position\n        if (previousScrollState) {\n            window.scrollTo(previousScrollState.__svelte_spa_router_scrollX, previousScrollState.__svelte_spa_router_scrollY)\n        }\n        else {\n            // Otherwise this is a forward navigation: scroll to top\n            window.scrollTo(0, 0)\n        }\n    })\n}\n\n// Always have the latest value of loc\nlet lastLoc = null\n\n// Current object of the component loaded\nlet componentObj = null\n\n// Handle hash change events\n// Listen to changes in the $loc store and update the page\n// Do not use the $: syntax because it gets triggered by too many things\nconst unsubscribeLoc = loc.subscribe(async (newLoc) => {\n    lastLoc = newLoc\n\n    // Find a route matching the location\n    let i = 0\n    while (i < routesList.length) {\n        const match = routesList[i].match(newLoc.location)\n        if (!match) {\n            i++\n            continue\n        }\n\n        const detail = {\n            route: routesList[i].path,\n            location: newLoc.location,\n            querystring: newLoc.querystring,\n            userData: routesList[i].userData,\n            params: (match && typeof match == 'object' && Object.keys(match).length) ? match : null\n        }\n\n        // Check if the route can be loaded - if all conditions succeed\n        if (!(await routesList[i].checkConditions(detail))) {\n            // Don't display anything\n            component = null\n            componentObj = null\n            // Trigger an event to notify the user, then exit\n            dispatchNextTick('conditionsFailed', detail)\n            return\n        }\n\n        // Trigger an event to alert that we're loading the route\n        // We need to clone the object on every event invocation so we don't risk the object to be modified in the next tick\n        dispatchNextTick('routeLoading', Object.assign({}, detail))\n\n        // If there's a component to show while we're loading the route, display it\n        const obj = routesList[i].component\n        // Do not replace the component if we're loading the same one as before, to avoid the route being unmounted and re-mounted\n        if (componentObj != obj) {\n            if (obj.loading) {\n                component = obj.loading\n                componentObj = obj\n                componentParams = obj.loadingParams\n                props = {}\n\n                // Trigger the routeLoaded event for the loading component\n                // Create a copy of detail so we don't modify the object for the dynamic route (and the dynamic route doesn't modify our object too)\n                dispatchNextTick('routeLoaded', Object.assign({}, detail, {\n                    component: component,\n                    name: component.name,\n                    params: componentParams\n                }))\n            }\n            else {\n                component = null\n                componentObj = null\n            }\n\n            // Invoke the Promise\n            const loaded = await obj()\n\n            // Now that we're here, after the promise resolved, check if we still want this component, as the user might have navigated to another page in the meanwhile\n            if (newLoc != lastLoc) {\n                // Don't update the component, just exit\n                return\n            }\n\n            // If there is a \"default\" property, which is used by async routes, then pick that\n            component = (loaded && loaded.default) || loaded\n            componentObj = obj\n        }\n\n        // Set componentParams only if we have a match, to avoid a warning similar to `<Component> was created with unknown prop 'params'`\n        // Of course, this assumes that developers always add a \"params\" prop when they are expecting parameters\n        if (match && typeof match == 'object' && Object.keys(match).length) {\n            componentParams = match\n        }\n        else {\n            componentParams = null\n        }\n\n        // Set static props, if any\n        props = routesList[i].props\n\n        // Dispatch the routeLoaded event then exit\n        // We need to clone the object on every event invocation so we don't risk the object to be modified in the next tick\n        dispatchNextTick('routeLoaded', Object.assign({}, detail, {\n            component: component,\n            name: component.name,\n            params: componentParams\n        })).then(() => {\n            params.set(componentParams)\n        })\n        return\n    }\n\n    // If we're still here, there was no match, so show the empty component\n    component = null\n    componentObj = null\n    params.set(undefined)\n})\n\nonDestroy(() => {\n    unsubscribeLoc()\n    popStateChanged && window.removeEventListener('popstate', popStateChanged)\n})\n</script>\n","<script>\n    import { link } from \"svelte-spa-router\";\n</script>\n\n<a href=\"/editor/sfadfsd\" use:link>Go to editor</a>","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { nanoid } from \"nanoid\";\n\nexport async function loadDocumentNode(projectId, documentId) {\n    return null;\n}\n\nexport async function saveDocumentNode(projectId, documentId) {\n    return null;\n}\n\nexport default class DocumentNode {\n    constructor(title=\"Untitled Document\") {\n        this.id = nanoid();\n        this.content = \"\";\n        this.title = title;\n        this.childDocuments = [];\n    }\n}","<script >export let src;\nexport let size = '100%';\nexport let theme = 'default';\n$: icon = src?.[theme] ?? src?.['default'];\nif (size !== '100%') {\n    if (size.slice(-1) != 'x' && size.slice(-1) != 'm' && size.slice(-1) != '%') {\n        try {\n            size = parseInt(size) + 'px';\n        }\n        catch (error) {\n            size = '100%';\n        }\n    }\n}\n</script>\n\n<svg {...icon?.a} xmlns=\"http://www.w3.org/2000/svg\" width={size} height={size} {...$$restProps}>\n\t{#each icon?.path ?? [] as a}\n\t\t<path {...a} />\n\t{/each}\n\t{#each icon?.rect ?? [] as a}\n\t\t<rect {...a} />\n\t{/each}\n\t{#each icon?.circle ?? [] as a}\n\t\t<circle {...a} />\n\t{/each}\n\t{#each icon?.polygon ?? [] as a}\n\t\t<polygon {...a} />\n\t{/each}\n\t{#each icon?.polyline ?? [] as a}\n\t\t<polyline {...a} />\n\t{/each}\n\t{#each icon?.line ?? [] as a}\n\t\t<line {...a} />\n\t{/each}\n</svg>\n","export const AcademicCap = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M12 14l9-5-9-5-9 5 9 5z\" }, { \"d\": \"M12 14l6.16-3.422a12.083 12.083 0 01.665 6.479A11.952 11.952 0 0012 20.055a11.952 11.952 0 00-6.824-2.998 12.078 12.078 0 01.665-6.479L12 14z\" }, { \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M12 14l9-5-9-5-9 5 9 5zm0 0l6.16-3.422a12.083 12.083 0 01.665 6.479A11.952 11.952 0 0012 20.055a11.952 11.952 0 00-6.824-2.998 12.078 12.078 0 01.665-6.479L12 14zm-4 6v-7.5l4-2.222\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M10.394 2.08a1 1 0 00-.788 0l-7 3a1 1 0 000 1.84L5.25 8.051a.999.999 0 01.356-.257l4-1.714a1 1 0 11.788 1.838L7.667 9.088l1.94.831a1 1 0 00.787 0l7-3a1 1 0 000-1.838l-7-3zM3.31 9.397L5 10.12v4.102a8.969 8.969 0 00-1.05-.174 1 1 0 01-.89-.89 11.115 11.115 0 01.25-3.762zM9.3 16.573A9.026 9.026 0 007 14.935v-3.957l1.818.78a3 3 0 002.364 0l5.508-2.361a11.026 11.026 0 01.25 3.762 1 1 0 01-.89.89 8.968 8.968 0 00-5.35 2.524 1 1 0 01-1.4 0zM6 18a1 1 0 001-1v-2.065a8.935 8.935 0 00-2-.712V17a1 1 0 001 1z\" }] } };\nexport const Adjustments = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M5 4a1 1 0 00-2 0v7.268a2 2 0 000 3.464V16a1 1 0 102 0v-1.268a2 2 0 000-3.464V4zM11 4a1 1 0 10-2 0v1.268a2 2 0 000 3.464V16a1 1 0 102 0V8.732a2 2 0 000-3.464V4zM16 3a1 1 0 011 1v7.268a2 2 0 010 3.464V16a1 1 0 11-2 0v-1.268a2 2 0 010-3.464V4a1 1 0 011-1z\" }] } };\nexport const Annotation = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M7 8h10M7 12h4m1 8l-4-4H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-3l-4 4z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M18 13V5a2 2 0 00-2-2H4a2 2 0 00-2 2v8a2 2 0 002 2h3l3 3 3-3h3a2 2 0 002-2zM5 7a1 1 0 011-1h8a1 1 0 110 2H6a1 1 0 01-1-1zm1 3a1 1 0 100 2h3a1 1 0 100-2H6z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Archive = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M5 8h14M5 8a2 2 0 110-4h14a2 2 0 110 4M5 8v10a2 2 0 002 2h10a2 2 0 002-2V8m-9 4h4\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M4 3a2 2 0 100 4h12a2 2 0 100-4H4z\" }, { \"fill-rule\": \"evenodd\", \"d\": \"M3 8h14v7a2 2 0 01-2 2H5a2 2 0 01-2-2V8zm5 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z\", \"clip-rule\": \"evenodd\" }] } };\nexport const ArrowCircleDown = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M15 13l-3 3m0 0l-3-3m3 3V8m0 13a9 9 0 110-18 9 9 0 010 18z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M10 18a8 8 0 100-16 8 8 0 000 16zm1-11a1 1 0 10-2 0v3.586L7.707 9.293a1 1 0 00-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L11 10.586V7z\", \"clip-rule\": \"evenodd\" }] } };\nexport const ArrowCircleLeft = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M11 15l-3-3m0 0l3-3m-3 3h8M3 12a9 9 0 1118 0 9 9 0 01-18 0z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M10 18a8 8 0 100-16 8 8 0 000 16zm.707-10.293a1 1 0 00-1.414-1.414l-3 3a1 1 0 000 1.414l3 3a1 1 0 001.414-1.414L9.414 11H13a1 1 0 100-2H9.414l1.293-1.293z\", \"clip-rule\": \"evenodd\" }] } };\nexport const ArrowCircleRight = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M13 9l3 3m0 0l-3 3m3-3H8m13 0a9 9 0 11-18 0 9 9 0 0118 0z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-8.707l-3-3a1 1 0 00-1.414 1.414L10.586 9H7a1 1 0 100 2h3.586l-1.293 1.293a1 1 0 101.414 1.414l3-3a1 1 0 000-1.414z\", \"clip-rule\": \"evenodd\" }] } };\nexport const ArrowCircleUp = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M9 11l3-3m0 0l3 3m-3-3v8m0-13a9 9 0 110 18 9 9 0 010-18z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-8.707l-3-3a1 1 0 00-1.414 0l-3 3a1 1 0 001.414 1.414L9 9.414V13a1 1 0 102 0V9.414l1.293 1.293a1 1 0 001.414-1.414z\", \"clip-rule\": \"evenodd\" }] } };\nexport const ArrowDown = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M19 14l-7 7m0 0l-7-7m7 7V3\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M16.707 10.293a1 1 0 010 1.414l-6 6a1 1 0 01-1.414 0l-6-6a1 1 0 111.414-1.414L9 14.586V3a1 1 0 012 0v11.586l4.293-4.293a1 1 0 011.414 0z\", \"clip-rule\": \"evenodd\" }] } };\nexport const ArrowLeft = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M10 19l-7-7m0 0l7-7m-7 7h18\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z\", \"clip-rule\": \"evenodd\" }] } };\nexport const ArrowNarrowDown = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M16 17l-4 4m0 0l-4-4m4 4V3\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M14.707 12.293a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 111.414-1.414L9 14.586V3a1 1 0 012 0v11.586l2.293-2.293a1 1 0 011.414 0z\", \"clip-rule\": \"evenodd\" }] } };\nexport const ArrowNarrowLeft = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M7 16l-4-4m0 0l4-4m-4 4h18\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M7.707 14.707a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l2.293 2.293a1 1 0 010 1.414z\", \"clip-rule\": \"evenodd\" }] } };\nexport const ArrowNarrowRight = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M17 8l4 4m0 0l-4 4m4-4H3\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z\", \"clip-rule\": \"evenodd\" }] } };\nexport const ArrowNarrowUp = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M8 7l4-4m0 0l4 4m-4-4v18\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M5.293 7.707a1 1 0 010-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 01-1.414 1.414L11 5.414V17a1 1 0 11-2 0V5.414L6.707 7.707a1 1 0 01-1.414 0z\", \"clip-rule\": \"evenodd\" }] } };\nexport const ArrowRight = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M14 5l7 7m0 0l-7 7m7-7H3\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z\", \"clip-rule\": \"evenodd\" }] } };\nexport const ArrowSmDown = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M17 13l-5 5m0 0l-5-5m5 5V6\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M14.707 10.293a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 111.414-1.414L9 12.586V5a1 1 0 012 0v7.586l2.293-2.293a1 1 0 011.414 0z\", \"clip-rule\": \"evenodd\" }] } };\nexport const ArrowSmLeft = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M11 17l-5-5m0 0l5-5m-5 5h12\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M9.707 14.707a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 1.414L7.414 9H15a1 1 0 110 2H7.414l2.293 2.293a1 1 0 010 1.414z\", \"clip-rule\": \"evenodd\" }] } };\nexport const ArrowSmRight = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M13 7l5 5m0 0l-5 5m5-5H6\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z\", \"clip-rule\": \"evenodd\" }] } };\nexport const ArrowSmUp = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M7 11l5-5m0 0l5 5m-5-5v12\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M5.293 9.707a1 1 0 010-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 01-1.414 1.414L11 7.414V15a1 1 0 11-2 0V7.414L6.707 9.707a1 1 0 01-1.414 0z\", \"clip-rule\": \"evenodd\" }] } };\nexport const ArrowUp = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M5 10l7-7m0 0l7 7m-7-7v18\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M3.293 9.707a1 1 0 010-1.414l6-6a1 1 0 011.414 0l6 6a1 1 0 01-1.414 1.414L11 5.414V17a1 1 0 11-2 0V5.414L4.707 9.707a1 1 0 01-1.414 0z\", \"clip-rule\": \"evenodd\" }] } };\nexport const ArrowsExpand = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M4 8V4m0 0h4M4 4l5 5m11-1V4m0 0h-4m4 0l-5 5M4 16v4m0 0h4m-4 0l5-5m11 5l-5-5m5 5v-4m0 4h-4\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M3 4a1 1 0 011-1h4a1 1 0 010 2H6.414l2.293 2.293a1 1 0 01-1.414 1.414L5 6.414V8a1 1 0 01-2 0V4zm9 1a1 1 0 110-2h4a1 1 0 011 1v4a1 1 0 11-2 0V6.414l-2.293 2.293a1 1 0 11-1.414-1.414L13.586 5H12zm-9 7a1 1 0 112 0v1.586l2.293-2.293a1 1 0 011.414 1.414L6.414 15H8a1 1 0 110 2H4a1 1 0 01-1-1v-4zm13-1a1 1 0 011 1v4a1 1 0 01-1 1h-4a1 1 0 110-2h1.586l-2.293-2.293a1 1 0 011.414-1.414L15 13.586V12a1 1 0 011-1z\", \"clip-rule\": \"evenodd\" }] } };\nexport const AtSymbol = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M16 12a4 4 0 10-8 0 4 4 0 008 0zm0 0v1.5a2.5 2.5 0 005 0V12a9 9 0 10-9 9m4.5-1.206a8.959 8.959 0 01-4.5 1.207\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M14.243 5.757a6 6 0 10-.986 9.284 1 1 0 111.087 1.678A8 8 0 1118 10a3 3 0 01-4.8 2.401A4 4 0 1114 10a1 1 0 102 0c0-1.537-.586-3.07-1.757-4.243zM12 10a2 2 0 10-4 0 2 2 0 004 0z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Backspace = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M12 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2M3 12l6.414 6.414a2 2 0 001.414.586H19a2 2 0 002-2V7a2 2 0 00-2-2h-8.172a2 2 0 00-1.414.586L3 12z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M6.707 4.879A3 3 0 018.828 4H15a3 3 0 013 3v6a3 3 0 01-3 3H8.828a3 3 0 01-2.12-.879l-4.415-4.414a1 1 0 010-1.414l4.414-4.414zm4 2.414a1 1 0 00-1.414 1.414L10.586 10l-1.293 1.293a1 1 0 101.414 1.414L12 11.414l1.293 1.293a1 1 0 001.414-1.414L13.414 10l1.293-1.293a1 1 0 00-1.414-1.414L12 8.586l-1.293-1.293z\", \"clip-rule\": \"evenodd\" }] } };\nexport const BadgeCheck = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M9 12l2 2 4-4M7.835 4.697a3.42 3.42 0 001.946-.806 3.42 3.42 0 014.438 0 3.42 3.42 0 001.946.806 3.42 3.42 0 013.138 3.138 3.42 3.42 0 00.806 1.946 3.42 3.42 0 010 4.438 3.42 3.42 0 00-.806 1.946 3.42 3.42 0 01-3.138 3.138 3.42 3.42 0 00-1.946.806 3.42 3.42 0 01-4.438 0 3.42 3.42 0 00-1.946-.806 3.42 3.42 0 01-3.138-3.138 3.42 3.42 0 00-.806-1.946 3.42 3.42 0 010-4.438 3.42 3.42 0 00.806-1.946 3.42 3.42 0 013.138-3.138z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M6.267 3.455a3.066 3.066 0 001.745-.723 3.066 3.066 0 013.976 0 3.066 3.066 0 001.745.723 3.066 3.066 0 012.812 2.812c.051.643.304 1.254.723 1.745a3.066 3.066 0 010 3.976 3.066 3.066 0 00-.723 1.745 3.066 3.066 0 01-2.812 2.812 3.066 3.066 0 00-1.745.723 3.066 3.066 0 01-3.976 0 3.066 3.066 0 00-1.745-.723 3.066 3.066 0 01-2.812-2.812 3.066 3.066 0 00-.723-1.745 3.066 3.066 0 010-3.976 3.066 3.066 0 00.723-1.745 3.066 3.066 0 012.812-2.812zm7.44 5.252a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Ban = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728A9 9 0 015.636 5.636m12.728 12.728L5.636 5.636\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M13.477 14.89A6 6 0 015.11 6.524l8.367 8.368zm1.414-1.414L6.524 5.11a6 6 0 018.367 8.367zM18 10a8 8 0 11-16 0 8 8 0 0116 0z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Beaker = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M19.428 15.428a2 2 0 00-1.022-.547l-2.387-.477a6 6 0 00-3.86.517l-.318.158a6 6 0 01-3.86.517L6.05 15.21a2 2 0 00-1.806.547M8 4h8l-1 1v5.172a2 2 0 00.586 1.414l5 5c1.26 1.26.367 3.414-1.415 3.414H4.828c-1.782 0-2.674-2.154-1.414-3.414l5-5A2 2 0 009 10.172V5L8 4z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M7 2a1 1 0 00-.707 1.707L7 4.414v3.758a1 1 0 01-.293.707l-4 4C.817 14.769 2.156 18 4.828 18h10.343c2.673 0 4.012-3.231 2.122-5.121l-4-4A1 1 0 0113 8.172V4.414l.707-.707A1 1 0 0013 2H7zm2 6.172V4h2v4.172a3 3 0 00.879 2.12l1.027 1.028a4 4 0 00-2.171.102l-.47.156a4 4 0 01-2.53 0l-.563-.187a1.993 1.993 0 00-.114-.035l1.063-1.063A3 3 0 009 8.172z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Bell = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M10 2a6 6 0 00-6 6v3.586l-.707.707A1 1 0 004 14h12a1 1 0 00.707-1.707L16 11.586V8a6 6 0 00-6-6zM10 18a3 3 0 01-3-3h6a3 3 0 01-3 3z\" }] } };\nexport const BookOpen = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M9 4.804A7.968 7.968 0 005.5 4c-1.255 0-2.443.29-3.5.804v10A7.969 7.969 0 015.5 14c1.669 0 3.218.51 4.5 1.385A7.962 7.962 0 0114.5 14c1.255 0 2.443.29 3.5.804v-10A7.968 7.968 0 0014.5 4c-1.255 0-2.443.29-3.5.804V12a1 1 0 11-2 0V4.804z\" }] } };\nexport const BookmarkAlt = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M16 4v12l-4-2-4 2V4M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M3 5a2 2 0 012-2h10a2 2 0 012 2v10a2 2 0 01-2 2H5a2 2 0 01-2-2V5zm11 1H6v8l4-2 4 2V6z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Bookmark = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M5 4a2 2 0 012-2h6a2 2 0 012 2v14l-5-2.5L5 18V4z\" }] } };\nexport const Briefcase = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M21 13.255A23.931 23.931 0 0112 15c-3.183 0-6.22-.62-9-1.745M16 6V4a2 2 0 00-2-2h-4a2 2 0 00-2 2v2m4 6h.01M5 20h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M6 6V5a3 3 0 013-3h2a3 3 0 013 3v1h2a2 2 0 012 2v3.57A22.952 22.952 0 0110 13a22.95 22.95 0 01-8-1.43V8a2 2 0 012-2h2zm2-1a1 1 0 011-1h2a1 1 0 011 1v1H8V5zm1 5a1 1 0 011-1h.01a1 1 0 110 2H10a1 1 0 01-1-1z\", \"clip-rule\": \"evenodd\" }, { \"d\": \"M2 13.692V16a2 2 0 002 2h12a2 2 0 002-2v-2.308A24.974 24.974 0 0110 15c-2.796 0-5.487-.46-8-1.308z\" }] } };\nexport const Cake = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M21 15.546c-.523 0-1.046.151-1.5.454a2.704 2.704 0 01-3 0 2.704 2.704 0 00-3 0 2.704 2.704 0 01-3 0 2.704 2.704 0 00-3 0 2.704 2.704 0 01-3 0 2.701 2.701 0 00-1.5-.454M9 6v2m3-2v2m3-2v2M9 3h.01M12 3h.01M15 3h.01M21 21v-7a2 2 0 00-2-2H5a2 2 0 00-2 2v7h18zm-3-9v-2a2 2 0 00-2-2H8a2 2 0 00-2 2v2h12z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M6 3a1 1 0 011-1h.01a1 1 0 010 2H7a1 1 0 01-1-1zm2 3a1 1 0 00-2 0v1a2 2 0 00-2 2v1a2 2 0 00-2 2v.683a3.7 3.7 0 011.055.485 1.704 1.704 0 001.89 0 3.704 3.704 0 014.11 0 1.704 1.704 0 001.89 0 3.704 3.704 0 014.11 0 1.704 1.704 0 001.89 0A3.7 3.7 0 0118 12.683V12a2 2 0 00-2-2V9a2 2 0 00-2-2V6a1 1 0 10-2 0v1h-1V6a1 1 0 10-2 0v1H8V6zm10 8.868a3.704 3.704 0 01-4.055-.036 1.704 1.704 0 00-1.89 0 3.704 3.704 0 01-4.11 0 1.704 1.704 0 00-1.89 0A3.704 3.704 0 012 14.868V17a1 1 0 001 1h14a1 1 0 001-1v-2.132zM9 3a1 1 0 011-1h.01a1 1 0 110 2H10a1 1 0 01-1-1zm3 0a1 1 0 011-1h.01a1 1 0 110 2H13a1 1 0 01-1-1z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Calculator = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M9 7h6m0 10v-3m-3 3h.01M9 17h.01M9 14h.01M12 14h.01M15 11h.01M12 11h.01M9 11h.01M7 21h10a2 2 0 002-2V5a2 2 0 00-2-2H7a2 2 0 00-2 2v14a2 2 0 002 2z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M6 2a2 2 0 00-2 2v12a2 2 0 002 2h8a2 2 0 002-2V4a2 2 0 00-2-2H6zm1 2a1 1 0 000 2h6a1 1 0 100-2H7zm6 7a1 1 0 011 1v3a1 1 0 11-2 0v-3a1 1 0 011-1zm-3 3a1 1 0 100 2h.01a1 1 0 100-2H10zm-4 1a1 1 0 011-1h.01a1 1 0 110 2H7a1 1 0 01-1-1zm1-4a1 1 0 100 2h.01a1 1 0 100-2H7zm2 1a1 1 0 011-1h.01a1 1 0 110 2H10a1 1 0 01-1-1zm4-4a1 1 0 100 2h.01a1 1 0 100-2H13zM9 9a1 1 0 011-1h.01a1 1 0 110 2H10a1 1 0 01-1-1zM7 8a1 1 0 000 2h.01a1 1 0 000-2H7z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Calendar = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Camera = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z\" }, { \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M15 13a3 3 0 11-6 0 3 3 0 016 0z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M4 5a2 2 0 00-2 2v8a2 2 0 002 2h12a2 2 0 002-2V7a2 2 0 00-2-2h-1.586a1 1 0 01-.707-.293l-1.121-1.121A2 2 0 0011.172 3H8.828a2 2 0 00-1.414.586L6.293 4.707A1 1 0 015.586 5H4zm6 9a3 3 0 100-6 3 3 0 000 6z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Cash = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M17 9V7a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2m2 4h10a2 2 0 002-2v-6a2 2 0 00-2-2H9a2 2 0 00-2 2v6a2 2 0 002 2zm7-5a2 2 0 11-4 0 2 2 0 014 0z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M4 4a2 2 0 00-2 2v4a2 2 0 002 2V6h10a2 2 0 00-2-2H4zm2 6a2 2 0 012-2h8a2 2 0 012 2v4a2 2 0 01-2 2H8a2 2 0 01-2-2v-4zm6 4a2 2 0 100-4 2 2 0 000 4z\", \"clip-rule\": \"evenodd\" }] } };\nexport const ChartBar = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M2 11a1 1 0 011-1h2a1 1 0 011 1v5a1 1 0 01-1 1H3a1 1 0 01-1-1v-5zM8 7a1 1 0 011-1h2a1 1 0 011 1v9a1 1 0 01-1 1H9a1 1 0 01-1-1V7zM14 4a1 1 0 011-1h2a1 1 0 011 1v12a1 1 0 01-1 1h-2a1 1 0 01-1-1V4z\" }] } };\nexport const ChartPie = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M11 3.055A9.001 9.001 0 1020.945 13H11V3.055z\" }, { \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M20.488 9H15V3.512A9.025 9.025 0 0120.488 9z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M2 10a8 8 0 018-8v8h8a8 8 0 11-16 0z\" }, { \"d\": \"M12 2.252A8.014 8.014 0 0117.748 8H12V2.252z\" }] } };\nexport const ChartSquareBar = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M16 8v8m-4-5v5m-4-2v2m-2 4h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M5 3a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2V5a2 2 0 00-2-2H5zm9 4a1 1 0 10-2 0v6a1 1 0 102 0V7zm-3 2a1 1 0 10-2 0v4a1 1 0 102 0V9zm-3 3a1 1 0 10-2 0v1a1 1 0 102 0v-1z\", \"clip-rule\": \"evenodd\" }] } };\nexport const ChatAlt2 = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M17 8h2a2 2 0 012 2v6a2 2 0 01-2 2h-2v4l-4-4H9a1.994 1.994 0 01-1.414-.586m0 0L11 14h4a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2v4l.586-.586z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M2 5a2 2 0 012-2h7a2 2 0 012 2v4a2 2 0 01-2 2H9l-3 3v-3H4a2 2 0 01-2-2V5z\" }, { \"d\": \"M15 7v2a4 4 0 01-4 4H9.828l-1.766 1.767c.28.149.599.233.938.233h2l3 3v-3h2a2 2 0 002-2V9a2 2 0 00-2-2h-1z\" }] } };\nexport const ChatAlt = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M8 10h.01M12 10h.01M16 10h.01M9 16H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-5l-5 5v-5z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M18 5v8a2 2 0 01-2 2h-5l-5 4v-4H4a2 2 0 01-2-2V5a2 2 0 012-2h12a2 2 0 012 2zM7 8H5v2h2V8zm2 0h2v2H9V8zm6 0h-2v2h2V8z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Chat = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M18 10c0 3.866-3.582 7-8 7a8.841 8.841 0 01-4.083-.98L2 17l1.338-3.123C2.493 12.767 2 11.434 2 10c0-3.866 3.582-7 8-7s8 3.134 8 7zM7 9H5v2h2V9zm8 0h-2v2h2V9zM9 9h2v2H9V9z\", \"clip-rule\": \"evenodd\" }] } };\nexport const CheckCircle = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Check = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M5 13l4 4L19 7\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\", \"clip-rule\": \"evenodd\" }] } };\nexport const ChevronDoubleDown = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M19 13l-7 7-7-7m14-8l-7 7-7-7\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M15.707 4.293a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-5-5a1 1 0 011.414-1.414L10 8.586l4.293-4.293a1 1 0 011.414 0zm0 6a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-5-5a1 1 0 111.414-1.414L10 14.586l4.293-4.293a1 1 0 011.414 0z\", \"clip-rule\": \"evenodd\" }] } };\nexport const ChevronDoubleLeft = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M11 19l-7-7 7-7m8 14l-7-7 7-7\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M15.707 15.707a1 1 0 01-1.414 0l-5-5a1 1 0 010-1.414l5-5a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 010 1.414zm-6 0a1 1 0 01-1.414 0l-5-5a1 1 0 010-1.414l5-5a1 1 0 011.414 1.414L5.414 10l4.293 4.293a1 1 0 010 1.414z\", \"clip-rule\": \"evenodd\" }] } };\nexport const ChevronDoubleRight = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M13 5l7 7-7 7M5 5l7 7-7 7\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M10.293 15.707a1 1 0 010-1.414L14.586 10l-4.293-4.293a1 1 0 111.414-1.414l5 5a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0z\", \"clip-rule\": \"evenodd\" }, { \"fill-rule\": \"evenodd\", \"d\": \"M4.293 15.707a1 1 0 010-1.414L8.586 10 4.293 5.707a1 1 0 011.414-1.414l5 5a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0z\", \"clip-rule\": \"evenodd\" }] } };\nexport const ChevronDoubleUp = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M5 11l7-7 7 7M5 19l7-7 7 7\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M4.293 15.707a1 1 0 010-1.414l5-5a1 1 0 011.414 0l5 5a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414 0zm0-6a1 1 0 010-1.414l5-5a1 1 0 011.414 0l5 5a1 1 0 01-1.414 1.414L10 5.414 5.707 9.707a1 1 0 01-1.414 0z\", \"clip-rule\": \"evenodd\" }] } };\nexport const ChevronDown = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M19 9l-7 7-7-7\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\", \"clip-rule\": \"evenodd\" }] } };\nexport const ChevronLeft = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M15 19l-7-7 7-7\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\", \"clip-rule\": \"evenodd\" }] } };\nexport const ChevronRight = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M9 5l7 7-7 7\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\", \"clip-rule\": \"evenodd\" }] } };\nexport const ChevronUp = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M5 15l7-7 7 7\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M14.707 12.707a1 1 0 01-1.414 0L10 9.414l-3.293 3.293a1 1 0 01-1.414-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 010 1.414z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Chip = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M9 3v2m6-2v2M9 19v2m6-2v2M5 9H3m2 6H3m18-6h-2m2 6h-2M7 19h10a2 2 0 002-2V7a2 2 0 00-2-2H7a2 2 0 00-2 2v10a2 2 0 002 2zM9 9h6v6H9V9z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M13 7H7v6h6V7z\" }, { \"fill-rule\": \"evenodd\", \"d\": \"M7 2a1 1 0 012 0v1h2V2a1 1 0 112 0v1h2a2 2 0 012 2v2h1a1 1 0 110 2h-1v2h1a1 1 0 110 2h-1v2a2 2 0 01-2 2h-2v1a1 1 0 11-2 0v-1H9v1a1 1 0 11-2 0v-1H5a2 2 0 01-2-2v-2H2a1 1 0 110-2h1V9H2a1 1 0 010-2h1V5a2 2 0 012-2h2V2zM5 5h10v10H5V5z\", \"clip-rule\": \"evenodd\" }] } };\nexport const ClipboardCheck = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M9 2a1 1 0 000 2h2a1 1 0 100-2H9z\" }, { \"fill-rule\": \"evenodd\", \"d\": \"M4 5a2 2 0 012-2 3 3 0 003 3h2a3 3 0 003-3 2 2 0 012 2v11a2 2 0 01-2 2H6a2 2 0 01-2-2V5zm9.707 5.707a1 1 0 00-1.414-1.414L9 12.586l-1.293-1.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\", \"clip-rule\": \"evenodd\" }] } };\nexport const ClipboardCopy = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M8 5H6a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2v-1M8 5a2 2 0 002 2h2a2 2 0 002-2M8 5a2 2 0 012-2h2a2 2 0 012 2m0 0h2a2 2 0 012 2v3m2 4H10m0 0l3-3m-3 3l3 3\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M8 2a1 1 0 000 2h2a1 1 0 100-2H8z\" }, { \"d\": \"M3 5a2 2 0 012-2 3 3 0 003 3h2a3 3 0 003-3 2 2 0 012 2v6h-4.586l1.293-1.293a1 1 0 00-1.414-1.414l-3 3a1 1 0 000 1.414l3 3a1 1 0 001.414-1.414L10.414 13H15v3a2 2 0 01-2 2H5a2 2 0 01-2-2V5zM15 11h2a1 1 0 110 2h-2v-2z\" }] } };\nexport const ClipboardList = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M9 2a1 1 0 000 2h2a1 1 0 100-2H9z\" }, { \"fill-rule\": \"evenodd\", \"d\": \"M4 5a2 2 0 012-2 3 3 0 003 3h2a3 3 0 003-3 2 2 0 012 2v11a2 2 0 01-2 2H6a2 2 0 01-2-2V5zm3 4a1 1 0 000 2h.01a1 1 0 100-2H7zm3 0a1 1 0 000 2h3a1 1 0 100-2h-3zm-3 4a1 1 0 100 2h.01a1 1 0 100-2H7zm3 0a1 1 0 100 2h3a1 1 0 100-2h-3z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Clipboard = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z\" }, { \"d\": \"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z\" }] } };\nexport const Clock = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z\", \"clip-rule\": \"evenodd\" }] } };\nexport const CloudDownload = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M9 19l3 3m0 0l3-3m-3 3V10\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M2 9.5A3.5 3.5 0 005.5 13H9v2.586l-1.293-1.293a1 1 0 00-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L11 15.586V13h2.5a4.5 4.5 0 10-.616-8.958 4.002 4.002 0 10-7.753 1.977A3.5 3.5 0 002 9.5zm9 3.5H9V8a1 1 0 012 0v5z\", \"clip-rule\": \"evenodd\" }] } };\nexport const CloudUpload = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M5.5 13a3.5 3.5 0 01-.369-6.98 4 4 0 117.753-1.977A4.5 4.5 0 1113.5 13H11V9.413l1.293 1.293a1 1 0 001.414-1.414l-3-3a1 1 0 00-1.414 0l-3 3a1 1 0 001.414 1.414L9 9.414V13H5.5z\" }, { \"d\": \"M9 13h2v5a1 1 0 11-2 0v-5z\" }] } };\nexport const Cloud = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M3 15a4 4 0 004 4h9a5 5 0 10-.1-9.999 5.002 5.002 0 10-9.78 2.096A4.001 4.001 0 003 15z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M5.5 16a3.5 3.5 0 01-.369-6.98 4 4 0 117.753-1.977A4.5 4.5 0 1113.5 16h-8z\" }] } };\nexport const Code = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M12.316 3.051a1 1 0 01.633 1.265l-4 12a1 1 0 11-1.898-.632l4-12a1 1 0 011.265-.633zM5.707 6.293a1 1 0 010 1.414L3.414 10l2.293 2.293a1 1 0 11-1.414 1.414l-3-3a1 1 0 010-1.414l3-3a1 1 0 011.414 0zm8.586 0a1 1 0 011.414 0l3 3a1 1 0 010 1.414l-3 3a1 1 0 11-1.414-1.414L16.586 10l-2.293-2.293a1 1 0 010-1.414z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Cog = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\" }, { \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M11.49 3.17c-.38-1.56-2.6-1.56-2.98 0a1.532 1.532 0 01-2.286.948c-1.372-.836-2.942.734-2.106 2.106.54.886.061 2.042-.947 2.287-1.561.379-1.561 2.6 0 2.978a1.532 1.532 0 01.947 2.287c-.836 1.372.734 2.942 2.106 2.106a1.532 1.532 0 012.287.947c.379 1.561 2.6 1.561 2.978 0a1.533 1.533 0 012.287-.947c1.372.836 2.942-.734 2.106-2.106a1.533 1.533 0 01.947-2.287c1.561-.379 1.561-2.6 0-2.978a1.532 1.532 0 01-.947-2.287c.836-1.372-.734-2.942-2.106-2.106a1.532 1.532 0 01-2.287-.947zM10 13a3 3 0 100-6 3 3 0 000 6z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Collection = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M7 3a1 1 0 000 2h6a1 1 0 100-2H7zM4 7a1 1 0 011-1h10a1 1 0 110 2H5a1 1 0 01-1-1zM2 11a2 2 0 012-2h12a2 2 0 012 2v4a2 2 0 01-2 2H4a2 2 0 01-2-2v-4z\" }] } };\nexport const ColorSwatch = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M7 21a4 4 0 01-4-4V5a2 2 0 012-2h4a2 2 0 012 2v12a4 4 0 01-4 4zm0 0h12a2 2 0 002-2v-4a2 2 0 00-2-2h-2.343M11 7.343l1.657-1.657a2 2 0 012.828 0l2.829 2.829a2 2 0 010 2.828l-8.486 8.485M7 17h.01\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M4 2a2 2 0 00-2 2v11a3 3 0 106 0V4a2 2 0 00-2-2H4zm1 14a1 1 0 100-2 1 1 0 000 2zm5-1.757l4.9-4.9a2 2 0 000-2.828L13.485 5.1a2 2 0 00-2.828 0L10 5.757v8.486zM16 18H9.071l6-6H16a2 2 0 012 2v2a2 2 0 01-2 2z\", \"clip-rule\": \"evenodd\" }] } };\nexport const CreditCard = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M4 4a2 2 0 00-2 2v1h16V6a2 2 0 00-2-2H4z\" }, { \"fill-rule\": \"evenodd\", \"d\": \"M18 9H2v5a2 2 0 002 2h12a2 2 0 002-2V9zM4 13a1 1 0 011-1h1a1 1 0 110 2H5a1 1 0 01-1-1zm5-1a1 1 0 100 2h1a1 1 0 100-2H9z\", \"clip-rule\": \"evenodd\" }] } };\nexport const CubeTransparent = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M14 10l-2 1m0 0l-2-1m2 1v2.5M20 7l-2 1m2-1l-2-1m2 1v2.5M14 4l-2-1-2 1M4 7l2-1M4 7l2 1M4 7v2.5M12 21l-2-1m2 1l2-1m-2 1v-2.5M6 18l-2-1v-2.5M18 18l2-1v-2.5\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M9.504 1.132a1 1 0 01.992 0l1.75 1a1 1 0 11-.992 1.736L10 3.152l-1.254.716a1 1 0 11-.992-1.736l1.75-1zM5.618 4.504a1 1 0 01-.372 1.364L5.016 6l.23.132a1 1 0 11-.992 1.736L4 7.723V8a1 1 0 01-2 0V6a.996.996 0 01.52-.878l1.734-.99a1 1 0 011.364.372zm8.764 0a1 1 0 011.364-.372l1.733.99A1.002 1.002 0 0118 6v2a1 1 0 11-2 0v-.277l-.254.145a1 1 0 11-.992-1.736l.23-.132-.23-.132a1 1 0 01-.372-1.364zm-7 4a1 1 0 011.364-.372L10 8.848l1.254-.716a1 1 0 11.992 1.736L11 10.58V12a1 1 0 11-2 0v-1.42l-1.246-.712a1 1 0 01-.372-1.364zM3 11a1 1 0 011 1v1.42l1.246.712a1 1 0 11-.992 1.736l-1.75-1A1 1 0 012 14v-2a1 1 0 011-1zm14 0a1 1 0 011 1v2a1 1 0 01-.504.868l-1.75 1a1 1 0 11-.992-1.736L16 13.42V12a1 1 0 011-1zm-9.618 5.504a1 1 0 011.364-.372l.254.145V16a1 1 0 112 0v.277l.254-.145a1 1 0 11.992 1.736l-1.735.992a.995.995 0 01-1.022 0l-1.735-.992a1 1 0 01-.372-1.364z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Cube = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M11 17a1 1 0 001.447.894l4-2A1 1 0 0017 15V9.236a1 1 0 00-1.447-.894l-4 2a1 1 0 00-.553.894V17zM15.211 6.276a1 1 0 000-1.788l-4.764-2.382a1 1 0 00-.894 0L4.789 4.488a1 1 0 000 1.788l4.764 2.382a1 1 0 00.894 0l4.764-2.382zM4.447 8.342A1 1 0 003 9.236V15a1 1 0 00.553.894l4 2A1 1 0 009 17v-5.764a1 1 0 00-.553-.894l-4-2z\" }] } };\nexport const CurrencyBangladeshi = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M11 11V9a2 2 0 00-2-2m2 4v4a2 2 0 104 0v-1m-4-3H9m2 0h4m6 1a9 9 0 11-18 0 9 9 0 0118 0z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M10 18a8 8 0 100-16 8 8 0 000 16zM7 4a1 1 0 000 2 1 1 0 011 1v1H7a1 1 0 000 2h1v3a3 3 0 106 0v-1a1 1 0 10-2 0v1a1 1 0 11-2 0v-3h3a1 1 0 100-2h-3V7a3 3 0 00-3-3z\", \"clip-rule\": \"evenodd\" }] } };\nexport const CurrencyDollar = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M8.433 7.418c.155-.103.346-.196.567-.267v1.698a2.305 2.305 0 01-.567-.267C8.07 8.34 8 8.114 8 8c0-.114.07-.34.433-.582zM11 12.849v-1.698c.22.071.412.164.567.267.364.243.433.468.433.582 0 .114-.07.34-.433.582a2.305 2.305 0 01-.567.267z\" }, { \"fill-rule\": \"evenodd\", \"d\": \"M10 18a8 8 0 100-16 8 8 0 000 16zm1-13a1 1 0 10-2 0v.092a4.535 4.535 0 00-1.676.662C6.602 6.234 6 7.009 6 8c0 .99.602 1.765 1.324 2.246.48.32 1.054.545 1.676.662v1.941c-.391-.127-.68-.317-.843-.504a1 1 0 10-1.51 1.31c.562.649 1.413 1.076 2.353 1.253V15a1 1 0 102 0v-.092a4.535 4.535 0 001.676-.662C13.398 13.766 14 12.991 14 12c0-.99-.602-1.765-1.324-2.246A4.535 4.535 0 0011 9.092V7.151c.391.127.68.317.843.504a1 1 0 101.511-1.31c-.563-.649-1.413-1.076-2.354-1.253V5z\", \"clip-rule\": \"evenodd\" }] } };\nexport const CurrencyEuro = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M14.121 15.536c-1.171 1.952-3.07 1.952-4.242 0-1.172-1.953-1.172-5.119 0-7.072 1.171-1.952 3.07-1.952 4.242 0M8 10.5h4m-4 3h4m9-1.5a9 9 0 11-18 0 9 9 0 0118 0z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M10 18a8 8 0 100-16 8 8 0 000 16zM8.736 6.979C9.208 6.193 9.696 6 10 6c.304 0 .792.193 1.264.979a1 1 0 001.715-1.029C12.279 4.784 11.232 4 10 4s-2.279.784-2.979 1.95c-.285.475-.507 1-.67 1.55H6a1 1 0 000 2h.013a9.358 9.358 0 000 1H6a1 1 0 100 2h.351c.163.55.385 1.075.67 1.55C7.721 15.216 8.768 16 10 16s2.279-.784 2.979-1.95a1 1 0 10-1.715-1.029c-.472.786-.96.979-1.264.979-.304 0-.792-.193-1.264-.979a4.265 4.265 0 01-.264-.521H10a1 1 0 100-2H8.017a7.36 7.36 0 010-1H10a1 1 0 100-2H8.472c.08-.185.167-.36.264-.521z\", \"clip-rule\": \"evenodd\" }] } };\nexport const CurrencyPound = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M15 9a2 2 0 10-4 0v5a2 2 0 01-2 2h6m-6-4h4m8 0a9 9 0 11-18 0 9 9 0 0118 0z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M10 18a8 8 0 100-16 8 8 0 000 16zm1-14a3 3 0 00-3 3v2H7a1 1 0 000 2h1v1a1 1 0 01-1 1 1 1 0 100 2h6a1 1 0 100-2H9.83c.11-.313.17-.65.17-1v-1h1a1 1 0 100-2h-1V7a1 1 0 112 0 1 1 0 102 0 3 3 0 00-3-3z\", \"clip-rule\": \"evenodd\" }] } };\nexport const CurrencyRupee = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M9 8h6m-5 0a3 3 0 110 6H9l3 3m-3-6h6m6 1a9 9 0 11-18 0 9 9 0 0118 0z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M10 18a8 8 0 100-16 8 8 0 000 16zM7 5a1 1 0 100 2h1a2 2 0 011.732 1H7a1 1 0 100 2h2.732A2 2 0 018 11H7a1 1 0 00-.707 1.707l3 3a1 1 0 001.414-1.414l-1.483-1.484A4.008 4.008 0 0011.874 10H13a1 1 0 100-2h-1.126a3.976 3.976 0 00-.41-1H13a1 1 0 100-2H7z\", \"clip-rule\": \"evenodd\" }] } };\nexport const CurrencyYen = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M9 8l3 5m0 0l3-5m-3 5v4m-3-5h6m-6 3h6m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M10 18a8 8 0 100-16 8 8 0 000 16zM7.858 5.485a1 1 0 00-1.715 1.03L7.633 9H7a1 1 0 100 2h1.834l.166.277V12H7a1 1 0 100 2h2v1a1 1 0 102 0v-1h2a1 1 0 100-2h-2v-.723l.166-.277H13a1 1 0 100-2h-.634l1.492-2.486a1 1 0 10-1.716-1.029L10.034 9h-.068L7.858 5.485z\", \"clip-rule\": \"evenodd\" }] } };\nexport const CursorClick = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M15 15l-2 5L9 9l11 4-5 2zm0 0l5 5M7.188 2.239l.777 2.897M5.136 7.965l-2.898-.777M13.95 4.05l-2.122 2.122m-5.657 5.656l-2.12 2.122\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M6.672 1.911a1 1 0 10-1.932.518l.259.966a1 1 0 001.932-.518l-.26-.966zM2.429 4.74a1 1 0 10-.517 1.932l.966.259a1 1 0 00.517-1.932l-.966-.26zm8.814-.569a1 1 0 00-1.415-1.414l-.707.707a1 1 0 101.415 1.415l.707-.708zm-7.071 7.072l.707-.707A1 1 0 003.465 9.12l-.708.707a1 1 0 001.415 1.415zm3.2-5.171a1 1 0 00-1.3 1.3l4 10a1 1 0 001.823.075l1.38-2.759 3.018 3.02a1 1 0 001.414-1.415l-3.019-3.02 2.76-1.379a1 1 0 00-.076-1.822l-10-4z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Database = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M4 7v10c0 2.21 3.582 4 8 4s8-1.79 8-4V7M4 7c0 2.21 3.582 4 8 4s8-1.79 8-4M4 7c0-2.21 3.582-4 8-4s8 1.79 8 4m0 5c0 2.21-3.582 4-8 4s-8-1.79-8-4\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M3 12v3c0 1.657 3.134 3 7 3s7-1.343 7-3v-3c0 1.657-3.134 3-7 3s-7-1.343-7-3z\" }, { \"d\": \"M3 7v3c0 1.657 3.134 3 7 3s7-1.343 7-3V7c0 1.657-3.134 3-7 3S3 8.657 3 7z\" }, { \"d\": \"M17 5c0 1.657-3.134 3-7 3S3 6.657 3 5s3.134-3 7-3 7 1.343 7 3z\" }] } };\nexport const DesktopComputer = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M3 5a2 2 0 012-2h10a2 2 0 012 2v8a2 2 0 01-2 2h-2.22l.123.489.804.804A1 1 0 0113 18H7a1 1 0 01-.707-1.707l.804-.804L7.22 15H5a2 2 0 01-2-2V5zm5.771 7H5V5h10v7H8.771z\", \"clip-rule\": \"evenodd\" }] } };\nexport const DeviceMobile = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M7 2a2 2 0 00-2 2v12a2 2 0 002 2h6a2 2 0 002-2V4a2 2 0 00-2-2H7zm3 14a1 1 0 100-2 1 1 0 000 2z\", \"clip-rule\": \"evenodd\" }] } };\nexport const DeviceTablet = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M12 18h.01M7 21h10a2 2 0 002-2V5a2 2 0 00-2-2H7a2 2 0 00-2 2v14a2 2 0 002 2z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M6 2a2 2 0 00-2 2v12a2 2 0 002 2h8a2 2 0 002-2V4a2 2 0 00-2-2H6zm4 14a1 1 0 100-2 1 1 0 000 2z\", \"clip-rule\": \"evenodd\" }] } };\nexport const DocumentAdd = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M9 13h6m-3-3v6m5 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M6 2a2 2 0 00-2 2v12a2 2 0 002 2h8a2 2 0 002-2V7.414A2 2 0 0015.414 6L12 2.586A2 2 0 0010.586 2H6zm5 6a1 1 0 10-2 0v2H7a1 1 0 100 2h2v2a1 1 0 102 0v-2h2a1 1 0 100-2h-2V8z\", \"clip-rule\": \"evenodd\" }] } };\nexport const DocumentDownload = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M6 2a2 2 0 00-2 2v12a2 2 0 002 2h8a2 2 0 002-2V7.414A2 2 0 0015.414 6L12 2.586A2 2 0 0010.586 2H6zm5 6a1 1 0 10-2 0v3.586l-1.293-1.293a1 1 0 10-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L11 11.586V8z\", \"clip-rule\": \"evenodd\" }] } };\nexport const DocumentDuplicate = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M9 2a2 2 0 00-2 2v8a2 2 0 002 2h6a2 2 0 002-2V6.414A2 2 0 0016.414 5L14 2.586A2 2 0 0012.586 2H9z\" }, { \"d\": \"M3 8a2 2 0 012-2v10h8a2 2 0 01-2 2H5a2 2 0 01-2-2V8z\" }] } };\nexport const DocumentRemove = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M9 13h6m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M6 2a2 2 0 00-2 2v12a2 2 0 002 2h8a2 2 0 002-2V7.414A2 2 0 0015.414 6L12 2.586A2 2 0 0010.586 2H6zm1 8a1 1 0 100 2h6a1 1 0 100-2H7z\", \"clip-rule\": \"evenodd\" }] } };\nexport const DocumentReport = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M9 17v-2m3 2v-4m3 4v-6m2 10H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M6 2a2 2 0 00-2 2v12a2 2 0 002 2h8a2 2 0 002-2V7.414A2 2 0 0015.414 6L12 2.586A2 2 0 0010.586 2H6zm2 10a1 1 0 10-2 0v3a1 1 0 102 0v-3zm2-3a1 1 0 011 1v5a1 1 0 11-2 0v-5a1 1 0 011-1zm4-1a1 1 0 10-2 0v7a1 1 0 102 0V8z\", \"clip-rule\": \"evenodd\" }] } };\nexport const DocumentSearch = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M10 21h7a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v11m0 5l4.879-4.879m0 0a3 3 0 104.243-4.242 3 3 0 00-4.243 4.242z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2h-1.528A6 6 0 004 9.528V4z\" }, { \"fill-rule\": \"evenodd\", \"d\": \"M8 10a4 4 0 00-3.446 6.032l-1.261 1.26a1 1 0 101.414 1.415l1.261-1.261A4 4 0 108 10zm-2 4a2 2 0 114 0 2 2 0 01-4 0z\", \"clip-rule\": \"evenodd\" }] } };\nexport const DocumentText = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Document = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4z\", \"clip-rule\": \"evenodd\" }] } };\nexport const DotsCircleHorizontal = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M8 12h.01M12 12h.01M16 12h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M10 18a8 8 0 100-16 8 8 0 000 16zM7 9H5v2h2V9zm8 0h-2v2h2V9zM9 9h2v2H9V9z\", \"clip-rule\": \"evenodd\" }] } };\nexport const DotsHorizontal = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M5 12h.01M12 12h.01M19 12h.01M6 12a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M6 10a2 2 0 11-4 0 2 2 0 014 0zM12 10a2 2 0 11-4 0 2 2 0 014 0zM16 12a2 2 0 100-4 2 2 0 000 4z\" }] } };\nexport const DotsVertical = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M10 6a2 2 0 110-4 2 2 0 010 4zM10 12a2 2 0 110-4 2 2 0 010 4zM10 18a2 2 0 110-4 2 2 0 010 4z\" }] } };\nexport const Download = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm3.293-7.707a1 1 0 011.414 0L9 10.586V3a1 1 0 112 0v7.586l1.293-1.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Duplicate = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M7 9a2 2 0 012-2h6a2 2 0 012 2v6a2 2 0 01-2 2H9a2 2 0 01-2-2V9z\" }, { \"d\": \"M5 3a2 2 0 00-2 2v6a2 2 0 002 2V5h8a2 2 0 00-2-2H5z\" }] } };\nexport const EmojiHappy = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M14.828 14.828a4 4 0 01-5.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M10 18a8 8 0 100-16 8 8 0 000 16zM7 9a1 1 0 100-2 1 1 0 000 2zm7-1a1 1 0 11-2 0 1 1 0 012 0zm-.464 5.535a1 1 0 10-1.415-1.414 3 3 0 01-4.242 0 1 1 0 00-1.415 1.414 5 5 0 007.072 0z\", \"clip-rule\": \"evenodd\" }] } };\nexport const EmojiSad = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M10 18a8 8 0 100-16 8 8 0 000 16zM7 9a1 1 0 100-2 1 1 0 000 2zm7-1a1 1 0 11-2 0 1 1 0 012 0zm-7.536 5.879a1 1 0 001.415 0 3 3 0 014.242 0 1 1 0 001.415-1.415 5 5 0 00-7.072 0 1 1 0 000 1.415z\", \"clip-rule\": \"evenodd\" }] } };\nexport const ExclamationCircle = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Exclamation = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\", \"clip-rule\": \"evenodd\" }] } };\nexport const ExternalLink = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M11 3a1 1 0 100 2h2.586l-6.293 6.293a1 1 0 101.414 1.414L15 6.414V9a1 1 0 102 0V4a1 1 0 00-1-1h-5z\" }, { \"d\": \"M5 5a2 2 0 00-2 2v8a2 2 0 002 2h8a2 2 0 002-2v-3a1 1 0 10-2 0v3H5V7h3a1 1 0 000-2H5z\" }] } };\nexport const EyeOff = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.88 9.88l-3.29-3.29m7.532 7.532l3.29 3.29M3 3l3.59 3.59m0 0A9.953 9.953 0 0112 5c4.478 0 8.268 2.943 9.543 7a10.025 10.025 0 01-4.132 5.411m0 0L21 21\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M3.707 2.293a1 1 0 00-1.414 1.414l14 14a1 1 0 001.414-1.414l-1.473-1.473A10.014 10.014 0 0019.542 10C18.268 5.943 14.478 3 10 3a9.958 9.958 0 00-4.512 1.074l-1.78-1.781zm4.261 4.26l1.514 1.515a2.003 2.003 0 012.45 2.45l1.514 1.514a4 4 0 00-5.478-5.478z\", \"clip-rule\": \"evenodd\" }, { \"d\": \"M12.454 16.697L9.75 13.992a4 4 0 01-3.742-3.741L2.335 6.578A9.98 9.98 0 00.458 10c1.274 4.057 5.065 7 9.542 7 .847 0 1.669-.105 2.454-.303z\" }] } };\nexport const Eye = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" }, { \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M10 12a2 2 0 100-4 2 2 0 000 4z\" }, { \"fill-rule\": \"evenodd\", \"d\": \"M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z\", \"clip-rule\": \"evenodd\" }] } };\nexport const FastForward = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M11.933 12.8a1 1 0 000-1.6L6.6 7.2A1 1 0 005 8v8a1 1 0 001.6.8l5.333-4zM19.933 12.8a1 1 0 000-1.6l-5.333-4A1 1 0 0013 8v8a1 1 0 001.6.8l5.333-4z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M4.555 5.168A1 1 0 003 6v8a1 1 0 001.555.832L10 11.202V14a1 1 0 001.555.832l6-4a1 1 0 000-1.664l-6-4A1 1 0 0010 6v2.798l-5.445-3.63z\" }] } };\nexport const Film = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M7 4v16M17 4v16M3 8h4m10 0h4M3 12h18M3 16h4m10 0h4M4 20h16a1 1 0 001-1V5a1 1 0 00-1-1H4a1 1 0 00-1 1v14a1 1 0 001 1z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V5a2 2 0 00-2-2H4zm3 2h6v4H7V5zm8 8v2h1v-2h-1zm-2-2H7v4h6v-4zm2 0h1V9h-1v2zm1-4V5h-1v2h1zM5 5v2H4V5h1zm0 4H4v2h1V9zm-1 4h1v2H4v-2z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Filter = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M3 3a1 1 0 011-1h12a1 1 0 011 1v3a1 1 0 01-.293.707L12 11.414V15a1 1 0 01-.293.707l-2 2A1 1 0 018 17v-5.586L3.293 6.707A1 1 0 013 6V3z\", \"clip-rule\": \"evenodd\" }] } };\nexport const FingerPrint = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M12 11c0 3.517-1.009 6.799-2.753 9.571m-3.44-2.04l.054-.09A13.916 13.916 0 008 11a4 4 0 118 0c0 1.017-.07 2.019-.203 3m-2.118 6.844A21.88 21.88 0 0015.171 17m3.839 1.132c.645-2.266.99-4.659.99-7.132A8 8 0 008 4.07M3 15.364c.64-1.319 1-2.8 1-4.364 0-1.457.39-2.823 1.07-4\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M6.625 2.655A9 9 0 0119 11a1 1 0 11-2 0 7 7 0 00-9.625-6.492 1 1 0 11-.75-1.853zM4.662 4.959A1 1 0 014.75 6.37 6.97 6.97 0 003 11a1 1 0 11-2 0 8.97 8.97 0 012.25-5.953 1 1 0 011.412-.088z\", \"clip-rule\": \"evenodd\" }, { \"fill-rule\": \"evenodd\", \"d\": \"M5 11a5 5 0 1110 0 1 1 0 11-2 0 3 3 0 10-6 0c0 1.677-.345 3.276-.968 4.729a1 1 0 11-1.838-.789A9.964 9.964 0 005 11zm8.921 2.012a1 1 0 01.831 1.145 19.86 19.86 0 01-.545 2.436 1 1 0 11-1.92-.558c.207-.713.371-1.445.49-2.192a1 1 0 011.144-.83z\", \"clip-rule\": \"evenodd\" }, { \"fill-rule\": \"evenodd\", \"d\": \"M10 10a1 1 0 011 1c0 2.236-.46 4.368-1.29 6.304a1 1 0 01-1.838-.789A13.952 13.952 0 009 11a1 1 0 011-1z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Fire = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M17.657 18.657A8 8 0 016.343 7.343S7 9 9 10c0-2 .5-5 2.986-7C14 5 16.09 5.777 17.656 7.343A7.975 7.975 0 0120 13a7.975 7.975 0 01-2.343 5.657z\" }, { \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M9.879 16.121A3 3 0 1012.015 11L11 14H9c0 .768.293 1.536.879 2.121z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M12.395 2.553a1 1 0 00-1.45-.385c-.345.23-.614.558-.822.88-.214.33-.403.713-.57 1.116-.334.804-.614 1.768-.84 2.734a31.365 31.365 0 00-.613 3.58 2.64 2.64 0 01-.945-1.067c-.328-.68-.398-1.534-.398-2.654A1 1 0 005.05 6.05 6.981 6.981 0 003 11a7 7 0 1011.95-4.95c-.592-.591-.98-.985-1.348-1.467-.363-.476-.724-1.063-1.207-2.03zM12.12 15.12A3 3 0 017 13s.879.5 2.5.5c0-1 .5-4 1.25-4.5.5 1 .786 1.293 1.371 1.879A2.99 2.99 0 0113 13a2.99 2.99 0 01-.879 2.121z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Flag = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M3 21v-4m0 0V5a2 2 0 012-2h6.5l1 1H21l-3 6 3 6h-8.5l-1-1H5a2 2 0 00-2 2zm9-13.5V9\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M3 6a3 3 0 013-3h10a1 1 0 01.8 1.6L14.25 8l2.55 3.4A1 1 0 0116 13H6a1 1 0 00-1 1v3a1 1 0 11-2 0V6z\", \"clip-rule\": \"evenodd\" }] } };\nexport const FolderAdd = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M2 6a2 2 0 012-2h5l2 2h5a2 2 0 012 2v6a2 2 0 01-2 2H4a2 2 0 01-2-2V6z\" }, { \"stroke\": \"#fff\", \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M8 11h4m-2-2v4\" }] } };\nexport const FolderDownload = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M12 10v6m0 0l-3-3m3 3l3-3M3 17V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M2 6a2 2 0 012-2h5l2 2h5a2 2 0 012 2v6a2 2 0 01-2 2H4a2 2 0 01-2-2V6z\" }, { \"stroke\": \"#fff\", \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M10 9v4m0 0l-2-2m2 2l2-2\" }] } };\nexport const FolderOpen = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M5 19a2 2 0 01-2-2V7a2 2 0 012-2h4l2 2h4a2 2 0 012 2v1M5 19h14a2 2 0 002-2v-5a2 2 0 00-2-2H9a2 2 0 00-2 2v5a2 2 0 01-2 2z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M2 6a2 2 0 012-2h4l2 2h4a2 2 0 012 2v1H8a3 3 0 00-3 3v1.5a1.5 1.5 0 01-3 0V6z\", \"clip-rule\": \"evenodd\" }, { \"d\": \"M6 12a2 2 0 012-2h8a2 2 0 012 2v2a2 2 0 01-2 2H2h2a2 2 0 002-2v-2z\" }] } };\nexport const FolderRemove = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M9 13h6M3 17V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M2 6a2 2 0 012-2h5l2 2h5a2 2 0 012 2v6a2 2 0 01-2 2H4a2 2 0 01-2-2V6z\" }, { \"stroke\": \"#fff\", \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M8 11h4\" }] } };\nexport const Folder = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M2 6a2 2 0 012-2h5l2 2h5a2 2 0 012 2v6a2 2 0 01-2 2H4a2 2 0 01-2-2V6z\" }] } };\nexport const Gift = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M12 8v13m0-13V6a2 2 0 112 2h-2zm0 0V5.5A2.5 2.5 0 109.5 8H12zm-7 4h14M5 12a2 2 0 110-4h14a2 2 0 110 4M5 12v7a2 2 0 002 2h10a2 2 0 002-2v-7\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M5 5a3 3 0 015-2.236A3 3 0 0114.83 6H16a2 2 0 110 4h-5V9a1 1 0 10-2 0v1H4a2 2 0 110-4h1.17C5.06 5.687 5 5.35 5 5zm4 1V5a1 1 0 10-1 1h1zm3 0a1 1 0 10-1-1v1h1z\", \"clip-rule\": \"evenodd\" }, { \"d\": \"M9 11H3v5a2 2 0 002 2h4v-7zM11 18h4a2 2 0 002-2v-5h-6v7z\" }] } };\nexport const GlobeAlt = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9a9 9 0 01-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M4.083 9h1.946c.089-1.546.383-2.97.837-4.118A6.004 6.004 0 004.083 9zM10 2a8 8 0 100 16 8 8 0 000-16zm0 2c-.076 0-.232.032-.465.262-.238.234-.497.623-.737 1.182-.389.907-.673 2.142-.766 3.556h3.936c-.093-1.414-.377-2.649-.766-3.556-.24-.56-.5-.948-.737-1.182C10.232 4.032 10.076 4 10 4zm3.971 5c-.089-1.546-.383-2.97-.837-4.118A6.004 6.004 0 0115.917 9h-1.946zm-2.003 2H8.032c.093 1.414.377 2.649.766 3.556.24.56.5.948.737 1.182.233.23.389.262.465.262.076 0 .232-.032.465-.262.238-.234.498-.623.737-1.182.389-.907.673-2.142.766-3.556zm1.166 4.118c.454-1.147.748-2.572.837-4.118h1.946a6.004 6.004 0 01-2.783 4.118zm-6.268 0C6.412 13.97 6.118 12.546 6.03 11H4.083a6.004 6.004 0 002.783 4.118z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Globe = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M3.055 11H5a2 2 0 012 2v1a2 2 0 002 2 2 2 0 012 2v2.945M8 3.935V5.5A2.5 2.5 0 0010.5 8h.5a2 2 0 012 2 2 2 0 104 0 2 2 0 012-2h1.064M15 20.488V18a2 2 0 012-2h3.064M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M10 18a8 8 0 100-16 8 8 0 000 16zM4.332 8.027a6.012 6.012 0 011.912-2.706C6.512 5.73 6.974 6 7.5 6A1.5 1.5 0 019 7.5V8a2 2 0 004 0 2 2 0 011.523-1.943A5.977 5.977 0 0116 10c0 .34-.028.675-.083 1H15a2 2 0 00-2 2v2.197A5.973 5.973 0 0110 16v-2a2 2 0 00-2-2 2 2 0 01-2-2 2 2 0 00-1.668-1.973z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Hand = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M7 11.5V14m0-2.5v-6a1.5 1.5 0 113 0m-3 6a1.5 1.5 0 00-3 0v2a7.5 7.5 0 0015 0v-5a1.5 1.5 0 00-3 0m-6-3V11m0-5.5v-1a1.5 1.5 0 013 0v1m0 0V11m0-5.5a1.5 1.5 0 013 0v3m0 0V11\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M9 3a1 1 0 012 0v5.5a.5.5 0 001 0V4a1 1 0 112 0v4.5a.5.5 0 001 0V6a1 1 0 112 0v5a7 7 0 11-14 0V9a1 1 0 012 0v2.5a.5.5 0 001 0V4a1 1 0 012 0v4.5a.5.5 0 001 0V3z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Hashtag = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M7 20l4-16m2 16l4-16M6 9h14M4 15h14\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M9.243 3.03a1 1 0 01.727 1.213L9.53 6h2.94l.56-2.243a1 1 0 111.94.486L14.53 6H17a1 1 0 110 2h-2.97l-1 4H15a1 1 0 110 2h-2.47l-.56 2.242a1 1 0 11-1.94-.485L10.47 14H7.53l-.56 2.242a1 1 0 11-1.94-.485L5.47 14H3a1 1 0 110-2h2.97l1-4H5a1 1 0 110-2h2.47l.56-2.243a1 1 0 011.213-.727zM9.03 8l-1 4h2.938l1-4H9.031z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Heart = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Home = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z\" }] } };\nexport const Identification = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M10 6H5a2 2 0 00-2 2v9a2 2 0 002 2h14a2 2 0 002-2V8a2 2 0 00-2-2h-5m-4 0V5a2 2 0 114 0v1m-4 0a2 2 0 104 0m-5 8a2 2 0 100-4 2 2 0 000 4zm0 0c1.306 0 2.417.835 2.83 2M9 14a3.001 3.001 0 00-2.83 2M15 11h3m-3 4h2\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M10 2a1 1 0 00-1 1v1a1 1 0 002 0V3a1 1 0 00-1-1zM4 4h3a3 3 0 006 0h3a2 2 0 012 2v9a2 2 0 01-2 2H4a2 2 0 01-2-2V6a2 2 0 012-2zm2.5 7a1.5 1.5 0 100-3 1.5 1.5 0 000 3zm2.45 4a2.5 2.5 0 10-4.9 0h4.9zM12 9a1 1 0 100 2h3a1 1 0 100-2h-3zm-1 4a1 1 0 011-1h2a1 1 0 110 2h-2a1 1 0 01-1-1z\", \"clip-rule\": \"evenodd\" }] } };\nexport const InboxIn = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M8 4H6a2 2 0 00-2 2v12a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-2m-4-1v8m0 0l3-3m-3 3L9 8m-5 5h2.586a1 1 0 01.707.293l2.414 2.414a1 1 0 00.707.293h3.172a1 1 0 00.707-.293l2.414-2.414a1 1 0 01.707-.293H20\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M8.707 7.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l2-2a1 1 0 00-1.414-1.414L11 7.586V3a1 1 0 10-2 0v4.586l-.293-.293z\" }, { \"d\": \"M3 5a2 2 0 012-2h1a1 1 0 010 2H5v7h2l1 2h4l1-2h2V5h-1a1 1 0 110-2h1a2 2 0 012 2v10a2 2 0 01-2 2H5a2 2 0 01-2-2V5z\" }] } };\nexport const Inbox = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M20 13V6a2 2 0 00-2-2H6a2 2 0 00-2 2v7m16 0v5a2 2 0 01-2 2H6a2 2 0 01-2-2v-5m16 0h-2.586a1 1 0 00-.707.293l-2.414 2.414a1 1 0 01-.707.293h-3.172a1 1 0 01-.707-.293l-2.414-2.414A1 1 0 006.586 13H4\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M5 3a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2V5a2 2 0 00-2-2H5zm0 2h10v7h-2l-1 2H8l-1-2H5V5z\", \"clip-rule\": \"evenodd\" }] } };\nexport const InformationCircle = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Key = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M15 7a2 2 0 012 2m4 0a6 6 0 01-7.743 5.743L11 17H9v2H7v2H4a1 1 0 01-1-1v-2.586a1 1 0 01.293-.707l5.964-5.964A6 6 0 1121 9z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M18 8a6 6 0 01-7.743 5.743L10 14l-1 1-1 1H6v2H2v-4l4.257-4.257A6 6 0 1118 8zm-6-4a1 1 0 100 2 2 2 0 012 2 1 1 0 102 0 4 4 0 00-4-4z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Library = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M8 14v3m4-3v3m4-3v3M3 21h18M3 10h18M3 7l9-4 9 4M4 10h16v11H4V10z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M10.496 2.132a1 1 0 00-.992 0l-7 4A1 1 0 003 8v7a1 1 0 100 2h14a1 1 0 100-2V8a1 1 0 00.496-1.868l-7-4zM6 9a1 1 0 00-1 1v3a1 1 0 102 0v-3a1 1 0 00-1-1zm3 1a1 1 0 012 0v3a1 1 0 11-2 0v-3zm5-1a1 1 0 00-1 1v3a1 1 0 102 0v-3a1 1 0 00-1-1z\", \"clip-rule\": \"evenodd\" }] } };\nexport const LightBulb = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M11 3a1 1 0 10-2 0v1a1 1 0 102 0V3zM15.657 5.757a1 1 0 00-1.414-1.414l-.707.707a1 1 0 001.414 1.414l.707-.707zM18 10a1 1 0 01-1 1h-1a1 1 0 110-2h1a1 1 0 011 1zM5.05 6.464A1 1 0 106.464 5.05l-.707-.707a1 1 0 00-1.414 1.414l.707.707zM5 10a1 1 0 01-1 1H3a1 1 0 110-2h1a1 1 0 011 1zM8 16v-1h4v1a2 2 0 11-4 0zM12 14c.015-.34.208-.646.477-.859a4 4 0 10-4.954 0c.27.213.462.519.476.859h4.002z\" }] } };\nexport const LightningBolt = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M13 10V3L4 14h7v7l9-11h-7z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M11.3 1.046A1 1 0 0112 2v5h4a1 1 0 01.82 1.573l-7 10A1 1 0 018 18v-5H4a1 1 0 01-.82-1.573l7-10a1 1 0 011.12-.38z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Link = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M12.586 4.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2 2 0 11-2.828-2.828l3-3z\", \"clip-rule\": \"evenodd\" }] } };\nexport const LocationMarker = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" }, { \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z\", \"clip-rule\": \"evenodd\" }] } };\nexport const LockClosed = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z\", \"clip-rule\": \"evenodd\" }] } };\nexport const LockOpen = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M8 11V7a4 4 0 118 0m-4 8v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M10 2a5 5 0 00-5 5v2a2 2 0 00-2 2v5a2 2 0 002 2h10a2 2 0 002-2v-5a2 2 0 00-2-2H7V7a3 3 0 015.905-.75 1 1 0 001.937-.5A5.002 5.002 0 0010 2z\" }] } };\nexport const Login = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M11 16l-4-4m0 0l4-4m-4 4h14m-5 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h7a3 3 0 013 3v1\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M3 3a1 1 0 011 1v12a1 1 0 11-2 0V4a1 1 0 011-1zm7.707 3.293a1 1 0 010 1.414L9.414 9H17a1 1 0 110 2H9.414l1.293 1.293a1 1 0 01-1.414 1.414l-3-3a1 1 0 010-1.414l3-3a1 1 0 011.414 0z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Logout = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M3 3a1 1 0 00-1 1v12a1 1 0 102 0V4a1 1 0 00-1-1zm10.293 9.293a1 1 0 001.414 1.414l3-3a1 1 0 000-1.414l-3-3a1 1 0 10-1.414 1.414L14.586 9H7a1 1 0 100 2h7.586l-1.293 1.293z\", \"clip-rule\": \"evenodd\" }] } };\nexport const MailOpen = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M3 19v-8.93a2 2 0 01.89-1.664l7-4.666a2 2 0 012.22 0l7 4.666A2 2 0 0121 10.07V19M3 19a2 2 0 002 2h14a2 2 0 002-2M3 19l6.75-4.5M21 19l-6.75-4.5M3 10l6.75 4.5M21 10l-6.75 4.5m0 0l-1.14.76a2 2 0 01-2.22 0l-1.14-.76\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M2.94 6.412A2 2 0 002 8.108V16a2 2 0 002 2h12a2 2 0 002-2V8.108a2 2 0 00-.94-1.696l-6-3.75a2 2 0 00-2.12 0l-6 3.75zm2.615 2.423a1 1 0 10-1.11 1.664l5 3.333a1 1 0 001.11 0l5-3.333a1 1 0 00-1.11-1.664L10 11.798 5.555 8.835z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Mail = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z\" }, { \"d\": \"M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z\" }] } };\nexport const Map = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M9 20l-5.447-2.724A1 1 0 013 16.382V5.618a1 1 0 011.447-.894L9 7m0 13l6-3m-6 3V7m6 10l4.553 2.276A1 1 0 0021 18.382V7.618a1 1 0 00-.553-.894L15 4m0 13V4m0 0L9 7\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M12 1.586l-4 4v12.828l4-4V1.586zM3.707 3.293A1 1 0 002 4v10a1 1 0 00.293.707L6 18.414V5.586L3.707 3.293zM17.707 5.293L14 1.586v12.828l2.293 2.293A1 1 0 0018 16V6a1 1 0 00-.293-.707z\", \"clip-rule\": \"evenodd\" }] } };\nexport const MenuAlt1 = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M4 6h16M4 12h8m-8 6h16\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h6a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z\", \"clip-rule\": \"evenodd\" }] } };\nexport const MenuAlt2 = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M4 6h16M4 12h16M4 18h7\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h6a1 1 0 110 2H4a1 1 0 01-1-1z\", \"clip-rule\": \"evenodd\" }] } };\nexport const MenuAlt3 = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M4 6h16M4 12h16m-7 6h7\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM9 15a1 1 0 011-1h6a1 1 0 110 2h-6a1 1 0 01-1-1z\", \"clip-rule\": \"evenodd\" }] } };\nexport const MenuAlt4 = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M4 8h16M4 16h16\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M3 7a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 13a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Menu = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M4 6h16M4 12h16M4 18h16\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Microphone = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M7 4a3 3 0 016 0v4a3 3 0 11-6 0V4zm4 10.93A7.001 7.001 0 0017 8a1 1 0 10-2 0A5 5 0 015 8a1 1 0 00-2 0 7.001 7.001 0 006 6.93V17H6a1 1 0 100 2h8a1 1 0 100-2h-3v-2.07z\", \"clip-rule\": \"evenodd\" }] } };\nexport const MinusCircle = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M15 12H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M10 18a8 8 0 100-16 8 8 0 000 16zM7 9a1 1 0 000 2h6a1 1 0 100-2H7z\", \"clip-rule\": \"evenodd\" }] } };\nexport const MinusSm = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M18 12H6\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M5 10a1 1 0 011-1h8a1 1 0 110 2H6a1 1 0 01-1-1z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Minus = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M20 12H4\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Moon = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z\" }] } };\nexport const MusicNote = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M9 19V6l12-3v13M9 19c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zm12-3c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zM9 10l12-3\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M18 3a1 1 0 00-1.196-.98l-10 2A1 1 0 006 5v9.114A4.369 4.369 0 005 14c-1.657 0-3 .895-3 2s1.343 2 3 2 3-.895 3-2V7.82l8-1.6v5.894A4.37 4.37 0 0015 12c-1.657 0-3 .895-3 2s1.343 2 3 2 3-.895 3-2V3z\" }] } };\nexport const Newspaper = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M2 5a2 2 0 012-2h8a2 2 0 012 2v10a2 2 0 002 2H4a2 2 0 01-2-2V5zm3 1h6v4H5V6zm6 6H5v2h6v-2z\", \"clip-rule\": \"evenodd\" }, { \"d\": \"M15 7h1a2 2 0 012 2v5.5a1.5 1.5 0 01-3 0V7z\" }] } };\nexport const OfficeBuilding = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M4 4a2 2 0 012-2h8a2 2 0 012 2v12a1 1 0 110 2h-3a1 1 0 01-1-1v-2a1 1 0 00-1-1H9a1 1 0 00-1 1v2a1 1 0 01-1 1H4a1 1 0 110-2V4zm3 1h2v2H7V5zm2 4H7v2h2V9zm2-4h2v2h-2V5zm2 4h-2v2h2V9z\", \"clip-rule\": \"evenodd\" }] } };\nexport const PaperAirplane = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M12 19l9 2-9-18-9 18 9-2zm0 0v-8\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M10.894 2.553a1 1 0 00-1.788 0l-7 14a1 1 0 001.169 1.409l5-1.429A1 1 0 009 15.571V11a1 1 0 112 0v4.571a1 1 0 00.725.962l5 1.428a1 1 0 001.17-1.408l-7-14z\" }] } };\nexport const PaperClip = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M15.172 7l-6.586 6.586a2 2 0 102.828 2.828l6.414-6.586a4 4 0 00-5.656-5.656l-6.415 6.585a6 6 0 108.486 8.486L20.5 13\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M8 4a3 3 0 00-3 3v4a5 5 0 0010 0V7a1 1 0 112 0v4a7 7 0 11-14 0V7a5 5 0 0110 0v4a3 3 0 11-6 0V7a1 1 0 012 0v4a1 1 0 102 0V7a3 3 0 00-3-3z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Pause = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M18 10a8 8 0 11-16 0 8 8 0 0116 0zM7 8a1 1 0 012 0v4a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v4a1 1 0 102 0V8a1 1 0 00-1-1z\", \"clip-rule\": \"evenodd\" }] } };\nexport const PencilAlt = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M17.414 2.586a2 2 0 00-2.828 0L7 10.172V13h2.828l7.586-7.586a2 2 0 000-2.828z\" }, { \"fill-rule\": \"evenodd\", \"d\": \"M2 6a2 2 0 012-2h4a1 1 0 010 2H4v10h10v-4a1 1 0 112 0v4a2 2 0 01-2 2H4a2 2 0 01-2-2V6z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Pencil = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z\" }] } };\nexport const PhoneIncoming = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M21 3l-6 6m0 0V4m0 5h5M5 3a2 2 0 00-2 2v1c0 8.284 6.716 15 15 15h1a2 2 0 002-2v-3.28a1 1 0 00-.684-.948l-4.493-1.498a1 1 0 00-1.21.502l-1.13 2.257a11.042 11.042 0 01-5.516-5.517l2.257-1.128a1 1 0 00.502-1.21L9.228 3.683A1 1 0 008.279 3H5z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M14.414 7l3.293-3.293a1 1 0 00-1.414-1.414L13 5.586V4a1 1 0 10-2 0v4.003a.996.996 0 00.617.921A.997.997 0 0012 9h4a1 1 0 100-2h-1.586z\" }, { \"d\": \"M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z\" }] } };\nexport const PhoneMissedCall = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M16 8l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2M5 3a2 2 0 00-2 2v1c0 8.284 6.716 15 15 15h1a2 2 0 002-2v-3.28a1 1 0 00-.684-.948l-4.493-1.498a1 1 0 00-1.21.502l-1.13 2.257a11.042 11.042 0 01-5.516-5.517l2.257-1.128a1 1 0 00.502-1.21L9.228 3.683A1 1 0 008.279 3H5z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z\" }, { \"d\": \"M16.707 3.293a1 1 0 010 1.414L15.414 6l1.293 1.293a1 1 0 01-1.414 1.414L14 7.414l-1.293 1.293a1 1 0 11-1.414-1.414L12.586 6l-1.293-1.293a1 1 0 011.414-1.414L14 4.586l1.293-1.293a1 1 0 011.414 0z\" }] } };\nexport const PhoneOutgoing = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M16 3h5m0 0v5m0-5l-6 6M5 3a2 2 0 00-2 2v1c0 8.284 6.716 15 15 15h1a2 2 0 002-2v-3.28a1 1 0 00-.684-.948l-4.493-1.498a1 1 0 00-1.21.502l-1.13 2.257a11.042 11.042 0 01-5.516-5.517l2.257-1.128a1 1 0 00.502-1.21L9.228 3.683A1 1 0 008.279 3H5z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M17.924 2.617a.997.997 0 00-.215-.322l-.004-.004A.997.997 0 0017 2h-4a1 1 0 100 2h1.586l-3.293 3.293a1 1 0 001.414 1.414L16 5.414V7a1 1 0 102 0V3a.997.997 0 00-.076-.383z\" }, { \"d\": \"M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z\" }] } };\nexport const Phone = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z\" }] } };\nexport const Photograph = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V5a2 2 0 00-2-2H4zm12 12H4l4-8 3 6 2-4 3 6z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Play = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z\" }, { \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z\", \"clip-rule\": \"evenodd\" }] } };\nexport const PlusCircle = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M10 18a8 8 0 100-16 8 8 0 000 16zm1-11a1 1 0 10-2 0v2H7a1 1 0 100 2h2v2a1 1 0 102 0v-2h2a1 1 0 100-2h-2V7z\", \"clip-rule\": \"evenodd\" }] } };\nexport const PlusSm = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M12 6v6m0 0v6m0-6h6m-6 0H6\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Plus = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M12 4v16m8-8H4\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z\", \"clip-rule\": \"evenodd\" }] } };\nexport const PresentationChartBar = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M8 13v-1m4 1v-3m4 3V8M8 21l4-4 4 4M3 4h18M4 4h16v12a1 1 0 01-1 1H5a1 1 0 01-1-1V4z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M3 3a1 1 0 000 2v8a2 2 0 002 2h2.586l-1.293 1.293a1 1 0 101.414 1.414L10 15.414l2.293 2.293a1 1 0 001.414-1.414L12.414 15H15a2 2 0 002-2V5a1 1 0 100-2H3zm11 4a1 1 0 10-2 0v4a1 1 0 102 0V7zm-3 1a1 1 0 10-2 0v3a1 1 0 102 0V8zM8 9a1 1 0 00-2 0v2a1 1 0 102 0V9z\", \"clip-rule\": \"evenodd\" }] } };\nexport const PresentationChartLine = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M7 12l3-3 3 3 4-4M8 21l4-4 4 4M3 4h18M4 4h16v12a1 1 0 01-1 1H5a1 1 0 01-1-1V4z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M3 3a1 1 0 000 2v8a2 2 0 002 2h2.586l-1.293 1.293a1 1 0 101.414 1.414L10 15.414l2.293 2.293a1 1 0 001.414-1.414L12.414 15H15a2 2 0 002-2V5a1 1 0 100-2H3zm11.707 4.707a1 1 0 00-1.414-1.414L10 9.586 8.707 8.293a1 1 0 00-1.414 0l-2 2a1 1 0 101.414 1.414L8 10.414l1.293 1.293a1 1 0 001.414 0l4-4z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Printer = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M17 17h2a2 2 0 002-2v-4a2 2 0 00-2-2H5a2 2 0 00-2 2v4a2 2 0 002 2h2m2 4h6a2 2 0 002-2v-4a2 2 0 00-2-2H9a2 2 0 00-2 2v4a2 2 0 002 2zm8-12V5a2 2 0 00-2-2H9a2 2 0 00-2 2v4h10z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M5 4v3H4a2 2 0 00-2 2v3a2 2 0 002 2h1v2a2 2 0 002 2h6a2 2 0 002-2v-2h1a2 2 0 002-2V9a2 2 0 00-2-2h-1V4a2 2 0 00-2-2H7a2 2 0 00-2 2zm8 0H7v3h6V4zm0 8H7v4h6v-4z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Puzzle = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M11 4a2 2 0 114 0v1a1 1 0 001 1h3a1 1 0 011 1v3a1 1 0 01-1 1h-1a2 2 0 100 4h1a1 1 0 011 1v3a1 1 0 01-1 1h-3a1 1 0 01-1-1v-1a2 2 0 10-4 0v1a1 1 0 01-1 1H7a1 1 0 01-1-1v-3a1 1 0 00-1-1H4a2 2 0 110-4h1a1 1 0 001-1V7a1 1 0 011-1h3a1 1 0 001-1V4z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M10 3.5a1.5 1.5 0 013 0V4a1 1 0 001 1h3a1 1 0 011 1v3a1 1 0 01-1 1h-.5a1.5 1.5 0 000 3h.5a1 1 0 011 1v3a1 1 0 01-1 1h-3a1 1 0 01-1-1v-.5a1.5 1.5 0 00-3 0v.5a1 1 0 01-1 1H6a1 1 0 01-1-1v-3a1 1 0 00-1-1h-.5a1.5 1.5 0 010-3H4a1 1 0 001-1V6a1 1 0 011-1h3a1 1 0 001-1v-.5z\" }] } };\nexport const Qrcode = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M12 4v1m6 11h2m-6 0h-2v4m0-11v3m0 0h.01M12 12h4.01M16 20h4M4 12h4m12 0h.01M5 8h2a1 1 0 001-1V5a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1zm12 0h2a1 1 0 001-1V5a1 1 0 00-1-1h-2a1 1 0 00-1 1v2a1 1 0 001 1zM5 20h2a1 1 0 001-1v-2a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M3 4a1 1 0 011-1h3a1 1 0 011 1v3a1 1 0 01-1 1H4a1 1 0 01-1-1V4zm2 2V5h1v1H5zM3 13a1 1 0 011-1h3a1 1 0 011 1v3a1 1 0 01-1 1H4a1 1 0 01-1-1v-3zm2 2v-1h1v1H5zM13 3a1 1 0 00-1 1v3a1 1 0 001 1h3a1 1 0 001-1V4a1 1 0 00-1-1h-3zm1 2v1h1V5h-1z\", \"clip-rule\": \"evenodd\" }, { \"d\": \"M11 4a1 1 0 10-2 0v1a1 1 0 002 0V4zM10 7a1 1 0 011 1v1h2a1 1 0 110 2h-3a1 1 0 01-1-1V8a1 1 0 011-1zM16 9a1 1 0 100 2 1 1 0 000-2zM9 13a1 1 0 011-1h1a1 1 0 110 2v2a1 1 0 11-2 0v-3zM7 11a1 1 0 100-2H4a1 1 0 100 2h3zM17 13a1 1 0 01-1 1h-2a1 1 0 110-2h2a1 1 0 011 1zM16 17a1 1 0 100-2h-3a1 1 0 100 2h3z\" }] } };\nexport const QuestionMarkCircle = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 00-.867.5 1 1 0 11-1.731-1A3 3 0 0113 8a3.001 3.001 0 01-2 2.83V11a1 1 0 11-2 0v-1a1 1 0 011-1 1 1 0 100-2zm0 8a1 1 0 100-2 1 1 0 000 2z\", \"clip-rule\": \"evenodd\" }] } };\nexport const ReceiptRefund = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M16 15v-1a4 4 0 00-4-4H8m0 0l3 3m-3-3l3-3m9 14V5a2 2 0 00-2-2H6a2 2 0 00-2 2v16l4-2 4 2 4-2 4 2z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M5 2a2 2 0 00-2 2v14l3.5-2 3.5 2 3.5-2 3.5 2V4a2 2 0 00-2-2H5zm4.707 3.707a1 1 0 00-1.414-1.414l-3 3a1 1 0 000 1.414l3 3a1 1 0 001.414-1.414L8.414 9H10a3 3 0 013 3v1a1 1 0 102 0v-1a5 5 0 00-5-5H8.414l1.293-1.293z\", \"clip-rule\": \"evenodd\" }] } };\nexport const ReceiptTax = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M9 14l6-6m-5.5.5h.01m4.99 5h.01M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16l3.5-2 3.5 2 3.5-2 3.5 2zM10 8.5a.5.5 0 11-1 0 .5.5 0 011 0zm5 5a.5.5 0 11-1 0 .5.5 0 011 0z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M5 2a2 2 0 00-2 2v14l3.5-2 3.5 2 3.5-2 3.5 2V4a2 2 0 00-2-2H5zm2.5 3a1.5 1.5 0 100 3 1.5 1.5 0 000-3zm6.207.293a1 1 0 00-1.414 0l-6 6a1 1 0 101.414 1.414l6-6a1 1 0 000-1.414zM12.5 10a1.5 1.5 0 100 3 1.5 1.5 0 000-3z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Refresh = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0v-2.101a7.002 7.002 0 01-11.601-2.566 1 1 0 01.61-1.276z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Reply = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M3 10h10a8 8 0 018 8v2M3 10l6 6m-6-6l6-6\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M7.707 3.293a1 1 0 010 1.414L5.414 7H11a7 7 0 017 7v2a1 1 0 11-2 0v-2a5 5 0 00-5-5H5.414l2.293 2.293a1 1 0 11-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Rewind = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M12.066 11.2a1 1 0 000 1.6l5.334 4A1 1 0 0019 16V8a1 1 0 00-1.6-.8l-5.333 4zM4.066 11.2a1 1 0 000 1.6l5.334 4A1 1 0 0011 16V8a1 1 0 00-1.6-.8l-5.334 4z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M8.445 14.832A1 1 0 0010 14v-2.798l5.445 3.63A1 1 0 0017 14V6a1 1 0 00-1.555-.832L10 8.798V6a1 1 0 00-1.555-.832l-6 4a1 1 0 000 1.664l6 4z\" }] } };\nexport const Rss = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M6 5c7.18 0 13 5.82 13 13M6 11a7 7 0 017 7m-6 0a1 1 0 11-2 0 1 1 0 012 0z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M5 3a1 1 0 000 2c5.523 0 10 4.477 10 10a1 1 0 102 0C17 8.373 11.627 3 5 3z\" }, { \"d\": \"M4 9a1 1 0 011-1 7 7 0 017 7 1 1 0 11-2 0 5 5 0 00-5-5 1 1 0 01-1-1zM3 15a2 2 0 114 0 2 2 0 01-4 0z\" }] } };\nexport const SaveAs = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M17 16v2a2 2 0 01-2 2H5a2 2 0 01-2-2v-7a2 2 0 012-2h2m3-4H9a2 2 0 00-2 2v7a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-1m-1 4l-3 3m0 0l-3-3m3 3V3\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M9.707 7.293a1 1 0 00-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L13 8.586V5h3a2 2 0 012 2v5a2 2 0 01-2 2H8a2 2 0 01-2-2V7a2 2 0 012-2h3v3.586L9.707 7.293zM11 3a1 1 0 112 0v2h-2V3z\" }, { \"d\": \"M4 9a2 2 0 00-2 2v5a2 2 0 002 2h8a2 2 0 002-2H4V9z\" }] } };\nexport const Save = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M8 7H5a2 2 0 00-2 2v9a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-3m-1 4l-3 3m0 0l-3-3m3 3V4\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M7.707 10.293a1 1 0 10-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L11 11.586V6h5a2 2 0 012 2v7a2 2 0 01-2 2H4a2 2 0 01-2-2V8a2 2 0 012-2h5v5.586l-1.293-1.293zM9 4a1 1 0 012 0v2H9V4z\" }] } };\nexport const Scale = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M3 6l3 1m0 0l-3 9a5.002 5.002 0 006.001 0M6 7l3 9M6 7l6-2m6 2l3-1m-3 1l-3 9a5.002 5.002 0 006.001 0M18 7l3 9m-3-9l-6-2m0-2v2m0 16V5m0 16H9m3 0h3\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M10 2a1 1 0 011 1v1.323l3.954 1.582 1.599-.8a1 1 0 01.894 1.79l-1.233.616 1.738 5.42a1 1 0 01-.285 1.05A3.989 3.989 0 0115 15a3.989 3.989 0 01-2.667-1.019 1 1 0 01-.285-1.05l1.715-5.349L11 6.477V16h2a1 1 0 110 2H7a1 1 0 110-2h2V6.477L6.237 7.582l1.715 5.349a1 1 0 01-.285 1.05A3.989 3.989 0 015 15a3.989 3.989 0 01-2.667-1.019 1 1 0 01-.285-1.05l1.738-5.42-1.233-.617a1 1 0 01.894-1.788l1.599.799L9 4.323V3a1 1 0 011-1zm-5 8.274l-.818 2.552c.25.112.526.174.818.174.292 0 .569-.062.818-.174L5 10.274zm10 0l-.818 2.552c.25.112.526.174.818.174.292 0 .569-.062.818-.174L15 10.274z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Scissors = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M14.121 14.121L19 19m-7-7l7-7m-7 7l-2.879 2.879M12 12L9.121 9.121m0 5.758a3 3 0 10-4.243 4.243 3 3 0 004.243-4.243zm0-5.758a3 3 0 10-4.243-4.243 3 3 0 004.243 4.243z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M5.5 2a3.5 3.5 0 101.665 6.58L8.585 10l-1.42 1.42a3.5 3.5 0 101.414 1.414l8.128-8.127a1 1 0 00-1.414-1.414L10 8.586l-1.42-1.42A3.5 3.5 0 005.5 2zM4 5.5a1.5 1.5 0 113 0 1.5 1.5 0 01-3 0zm0 9a1.5 1.5 0 113 0 1.5 1.5 0 01-3 0z\", \"clip-rule\": \"evenodd\" }, { \"d\": \"M12.828 11.414a1 1 0 00-1.414 1.414l3.879 3.88a1 1 0 001.414-1.415l-3.879-3.879z\" }] } };\nexport const SearchCircle = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M8 16l2.879-2.879m0 0a3 3 0 104.243-4.242 3 3 0 00-4.243 4.242zM21 12a9 9 0 11-18 0 9 9 0 0118 0z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M9 9a2 2 0 114 0 2 2 0 01-4 0z\" }, { \"fill-rule\": \"evenodd\", \"d\": \"M10 18a8 8 0 100-16 8 8 0 000 16zm1-13a4 4 0 00-3.446 6.032l-2.261 2.26a1 1 0 101.414 1.415l2.261-2.261A4 4 0 1011 5z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Search = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Selector = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M8 9l4-4 4 4m0 6l-4 4-4-4\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M10 3a1 1 0 01.707.293l3 3a1 1 0 01-1.414 1.414L10 5.414 7.707 7.707a1 1 0 01-1.414-1.414l3-3A1 1 0 0110 3zm-3.707 9.293a1 1 0 011.414 0L10 14.586l2.293-2.293a1 1 0 011.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Server = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M5 12h14M5 12a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v4a2 2 0 01-2 2M5 12a2 2 0 00-2 2v4a2 2 0 002 2h14a2 2 0 002-2v-4a2 2 0 00-2-2m-2-4h.01M17 16h.01\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M2 5a2 2 0 012-2h12a2 2 0 012 2v2a2 2 0 01-2 2H4a2 2 0 01-2-2V5zm14 1a1 1 0 11-2 0 1 1 0 012 0zM2 13a2 2 0 012-2h12a2 2 0 012 2v2a2 2 0 01-2 2H4a2 2 0 01-2-2v-2zm14 1a1 1 0 11-2 0 1 1 0 012 0z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Share = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.368 2.684 3 3 0 00-5.368-2.684z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M15 8a3 3 0 10-2.977-2.63l-4.94 2.47a3 3 0 100 4.319l4.94 2.47a3 3 0 10.895-1.789l-4.94-2.47a3.027 3.027 0 000-.74l4.94-2.47C13.456 7.68 14.19 8 15 8z\" }] } };\nexport const ShieldCheck = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M2.166 4.999A11.954 11.954 0 0010 1.944 11.954 11.954 0 0017.834 5c.11.65.166 1.32.166 2.001 0 5.225-3.34 9.67-8 11.317C5.34 16.67 2 12.225 2 7c0-.682.057-1.35.166-2.001zm11.541 3.708a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\", \"clip-rule\": \"evenodd\" }] } };\nexport const ShieldExclamation = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M20.618 5.984A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016zM12 9v2m0 4h.01\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M10 1.944A11.954 11.954 0 012.166 5C2.056 5.649 2 6.319 2 7c0 5.225 3.34 9.67 8 11.317C14.66 16.67 18 12.225 18 7c0-.682-.057-1.35-.166-2.001A11.954 11.954 0 0110 1.944zM11 14a1 1 0 11-2 0 1 1 0 012 0zm0-7a1 1 0 10-2 0v3a1 1 0 102 0V7z\", \"clip-rule\": \"evenodd\" }] } };\nexport const ShoppingBag = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M10 2a4 4 0 00-4 4v1H5a1 1 0 00-.994.89l-1 9A1 1 0 004 18h12a1 1 0 00.994-1.11l-1-9A1 1 0 0015 7h-1V6a4 4 0 00-4-4zm2 5V6a2 2 0 10-4 0v1h4zm-6 3a1 1 0 112 0 1 1 0 01-2 0zm7-1a1 1 0 100 2 1 1 0 000-2z\", \"clip-rule\": \"evenodd\" }] } };\nexport const ShoppingCart = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z\" }] } };\nexport const SortAscending = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M3 4h13M3 8h9m-9 4h6m4 0l4-4m0 0l4 4m-4-4v12\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M3 3a1 1 0 000 2h11a1 1 0 100-2H3zM3 7a1 1 0 000 2h5a1 1 0 000-2H3zM3 11a1 1 0 100 2h4a1 1 0 100-2H3zM13 16a1 1 0 102 0v-5.586l1.293 1.293a1 1 0 001.414-1.414l-3-3a1 1 0 00-1.414 0l-3 3a1 1 0 101.414 1.414L13 10.414V16z\" }] } };\nexport const SortDescending = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M3 4h13M3 8h9m-9 4h9m5-4v12m0 0l-4-4m4 4l4-4\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M3 3a1 1 0 000 2h11a1 1 0 100-2H3zM3 7a1 1 0 000 2h7a1 1 0 100-2H3zM3 11a1 1 0 100 2h4a1 1 0 100-2H3zM15 8a1 1 0 10-2 0v5.586l-1.293-1.293a1 1 0 00-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L15 13.586V8z\" }] } };\nexport const Sparkles = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M5 3v4M3 5h4M6 17v4m-2-2h4m5-16l2.286 6.857L21 12l-5.714 2.143L13 21l-2.286-6.857L5 12l5.714-2.143L13 3z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M5 2a1 1 0 011 1v1h1a1 1 0 010 2H6v1a1 1 0 01-2 0V6H3a1 1 0 010-2h1V3a1 1 0 011-1zm0 10a1 1 0 011 1v1h1a1 1 0 110 2H6v1a1 1 0 11-2 0v-1H3a1 1 0 110-2h1v-1a1 1 0 011-1zM12 2a1 1 0 01.967.744L14.146 7.2 17.5 9.134a1 1 0 010 1.732l-3.354 1.935-1.18 4.455a1 1 0 01-1.933 0L9.854 12.8 6.5 10.866a1 1 0 010-1.732l3.354-1.935 1.18-4.455A1 1 0 0112 2z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Speakerphone = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M11 5.882V19.24a1.76 1.76 0 01-3.417.592l-2.147-6.15M18 13a3 3 0 100-6M5.436 13.683A4.001 4.001 0 017 6h1.832c4.1 0 7.625-1.234 9.168-3v14c-1.543-1.766-5.067-3-9.168-3H7a3.988 3.988 0 01-1.564-.317z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M18 3a1 1 0 00-1.447-.894L8.763 6H5a3 3 0 000 6h.28l1.771 5.316A1 1 0 008 18h1a1 1 0 001-1v-4.382l6.553 3.276A1 1 0 0018 15V3z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Star = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" }] } };\nexport const StatusOffline = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M18.364 5.636a9 9 0 010 12.728m0 0l-2.829-2.829m2.829 2.829L21 21M15.536 8.464a5 5 0 010 7.072m0 0l-2.829-2.829m-4.243 2.829a4.978 4.978 0 01-1.414-2.83m-1.414 5.658a9 9 0 01-2.167-9.238m7.824 2.167a1 1 0 111.414 1.414m-1.414-1.414L3 3m8.293 8.293l1.414 1.414\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M3.707 2.293a1 1 0 00-1.414 1.414l6.921 6.922c.05.062.105.118.168.167l6.91 6.911a1 1 0 001.415-1.414l-.675-.675a9.001 9.001 0 00-.668-11.982A1 1 0 1014.95 5.05a7.002 7.002 0 01.657 9.143l-1.435-1.435a5.002 5.002 0 00-.636-6.294A1 1 0 0012.12 7.88c.924.923 1.12 2.3.587 3.415l-1.992-1.992a.922.922 0 00-.018-.018l-6.99-6.991zM3.238 8.187a1 1 0 00-1.933-.516c-.8 3-.025 6.336 2.331 8.693a1 1 0 001.414-1.415 6.997 6.997 0 01-1.812-6.762zM7.4 11.5a1 1 0 10-1.73 1c.214.371.48.72.795 1.035a1 1 0 001.414-1.414c-.191-.191-.35-.4-.478-.622z\" }] } };\nexport const StatusOnline = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M5.636 18.364a9 9 0 010-12.728m12.728 0a9 9 0 010 12.728m-9.9-2.829a5 5 0 010-7.07m7.072 0a5 5 0 010 7.07M13 12a1 1 0 11-2 0 1 1 0 012 0z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M5.05 3.636a1 1 0 010 1.414 7 7 0 000 9.9 1 1 0 11-1.414 1.414 9 9 0 010-12.728 1 1 0 011.414 0zm9.9 0a1 1 0 011.414 0 9 9 0 010 12.728 1 1 0 11-1.414-1.414 7 7 0 000-9.9 1 1 0 010-1.414zM7.879 6.464a1 1 0 010 1.414 3 3 0 000 4.243 1 1 0 11-1.415 1.414 5 5 0 010-7.07 1 1 0 011.415 0zm4.242 0a1 1 0 011.415 0 5 5 0 010 7.072 1 1 0 01-1.415-1.415 3 3 0 000-4.242 1 1 0 010-1.415zM10 9a1 1 0 011 1v.01a1 1 0 11-2 0V10a1 1 0 011-1z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Stop = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" }, { \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M9 10a1 1 0 011-1h4a1 1 0 011 1v4a1 1 0 01-1 1h-4a1 1 0 01-1-1v-4z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M10 18a8 8 0 100-16 8 8 0 000 16zM8 7a1 1 0 00-1 1v4a1 1 0 001 1h4a1 1 0 001-1V8a1 1 0 00-1-1H8z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Sun = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Support = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M18.364 5.636l-3.536 3.536m0 5.656l3.536 3.536M9.172 9.172L5.636 5.636m3.536 9.192l-3.536 3.536M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-5 0a4 4 0 11-8 0 4 4 0 018 0z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-2 0c0 .993-.241 1.929-.668 2.754l-1.524-1.525a3.997 3.997 0 00.078-2.183l1.562-1.562C15.802 8.249 16 9.1 16 10zm-5.165 3.913l1.58 1.58A5.98 5.98 0 0110 16a5.976 5.976 0 01-2.516-.552l1.562-1.562a4.006 4.006 0 001.789.027zm-4.677-2.796a4.002 4.002 0 01-.041-2.08l-.08.08-1.53-1.533A5.98 5.98 0 004 10c0 .954.223 1.856.619 2.657l1.54-1.54zm1.088-6.45A5.974 5.974 0 0110 4c.954 0 1.856.223 2.657.619l-1.54 1.54a4.002 4.002 0 00-2.346.033L7.246 4.668zM12 10a2 2 0 11-4 0 2 2 0 014 0z\", \"clip-rule\": \"evenodd\" }] } };\nexport const SwitchHorizontal = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M8 7h12m0 0l-4-4m4 4l-4 4m0 6H4m0 0l4 4m-4-4l4-4\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M8 5a1 1 0 100 2h5.586l-1.293 1.293a1 1 0 001.414 1.414l3-3a1 1 0 000-1.414l-3-3a1 1 0 10-1.414 1.414L13.586 5H8zM12 15a1 1 0 100-2H6.414l1.293-1.293a1 1 0 10-1.414-1.414l-3 3a1 1 0 000 1.414l3 3a1 1 0 001.414-1.414L6.414 15H12z\" }] } };\nexport const SwitchVertical = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M7 16V4m0 0L3 8m4-4l4 4m6 0v12m0 0l4-4m-4 4l-4-4\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M5 12a1 1 0 102 0V6.414l1.293 1.293a1 1 0 001.414-1.414l-3-3a1 1 0 00-1.414 0l-3 3a1 1 0 001.414 1.414L5 6.414V12zM15 8a1 1 0 10-2 0v5.586l-1.293-1.293a1 1 0 00-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L15 13.586V8z\" }] } };\nexport const Table = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M3 10h18M3 14h18m-9-4v8m-7 0h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M5 4a3 3 0 00-3 3v6a3 3 0 003 3h10a3 3 0 003-3V7a3 3 0 00-3-3H5zm-1 9v-1h5v2H5a1 1 0 01-1-1zm7 1h4a1 1 0 001-1v-1h-5v2zm0-4h5V8h-5v2zM9 8H4v2h5V8z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Tag = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M17.707 9.293a1 1 0 010 1.414l-7 7a1 1 0 01-1.414 0l-7-7A.997.997 0 012 10V5a3 3 0 013-3h5c.256 0 .512.098.707.293l7 7zM5 6a1 1 0 100-2 1 1 0 000 2z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Template = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M4 5a1 1 0 011-1h14a1 1 0 011 1v2a1 1 0 01-1 1H5a1 1 0 01-1-1V5zM4 13a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H5a1 1 0 01-1-1v-6zM16 13a1 1 0 011-1h2a1 1 0 011 1v6a1 1 0 01-1 1h-2a1 1 0 01-1-1v-6z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zM3 10a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1v-6zM14 9a1 1 0 00-1 1v6a1 1 0 001 1h2a1 1 0 001-1v-6a1 1 0 00-1-1h-2z\" }] } };\nexport const Terminal = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M2 5a2 2 0 012-2h12a2 2 0 012 2v10a2 2 0 01-2 2H4a2 2 0 01-2-2V5zm3.293 1.293a1 1 0 011.414 0l3 3a1 1 0 010 1.414l-3 3a1 1 0 01-1.414-1.414L7.586 10 5.293 7.707a1 1 0 010-1.414zM11 12a1 1 0 100 2h3a1 1 0 100-2h-3z\", \"clip-rule\": \"evenodd\" }] } };\nexport const ThumbDown = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M10 14H5.236a2 2 0 01-1.789-2.894l3.5-7A2 2 0 018.736 3h4.018a2 2 0 01.485.06l3.76.94m-7 10v5a2 2 0 002 2h.096c.5 0 .905-.405.905-.904 0-.715.211-1.413.608-2.008L17 13V4m-7 10h2m5-10h2a2 2 0 012 2v6a2 2 0 01-2 2h-2.5\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M18 9.5a1.5 1.5 0 11-3 0v-6a1.5 1.5 0 013 0v6zM14 9.667v-5.43a2 2 0 00-1.105-1.79l-.05-.025A4 4 0 0011.055 2H5.64a2 2 0 00-1.962 1.608l-1.2 6A2 2 0 004.44 12H8v4a2 2 0 002 2 1 1 0 001-1v-.667a4 4 0 01.8-2.4l1.4-1.866a4 4 0 00.8-2.4z\" }] } };\nexport const ThumbUp = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M14 10h4.764a2 2 0 011.789 2.894l-3.5 7A2 2 0 0115.263 21h-4.017c-.163 0-.326-.02-.485-.06L7 20m7-10V5a2 2 0 00-2-2h-.095c-.5 0-.905.405-.905.905 0 .714-.211 1.412-.608 2.006L7 11v9m7-10h-2M7 20H5a2 2 0 01-2-2v-6a2 2 0 012-2h2.5\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M2 10.5a1.5 1.5 0 113 0v6a1.5 1.5 0 01-3 0v-6zM6 10.333v5.43a2 2 0 001.106 1.79l.05.025A4 4 0 008.943 18h5.416a2 2 0 001.962-1.608l1.2-6A2 2 0 0015.56 8H12V4a2 2 0 00-2-2 1 1 0 00-1 1v.667a4 4 0 01-.8 2.4L6.8 7.933a4 4 0 00-.8 2.4z\" }] } };\nexport const Ticket = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M15 5v2m0 4v2m0 4v2M5 5a2 2 0 00-2 2v3a2 2 0 110 4v3a2 2 0 002 2h14a2 2 0 002-2v-3a2 2 0 110-4V7a2 2 0 00-2-2H5z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M2 6a2 2 0 012-2h12a2 2 0 012 2v2a2 2 0 100 4v2a2 2 0 01-2 2H4a2 2 0 01-2-2v-2a2 2 0 100-4V6z\" }] } };\nexport const Translate = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M3 5h12M9 3v2m1.048 9.5A18.022 18.022 0 016.412 9m6.088 9h7M11 21l5-10 5 10M12.751 5C11.783 10.77 8.07 15.61 3 18.129\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M7 2a1 1 0 011 1v1h3a1 1 0 110 2H9.578a18.87 18.87 0 01-1.724 4.78c.29.354.596.696.914 1.026a1 1 0 11-1.44 1.389c-.188-.196-.373-.396-.554-.6a19.098 19.098 0 01-3.107 3.567 1 1 0 01-1.334-1.49 17.087 17.087 0 003.13-3.733 18.992 18.992 0 01-1.487-2.494 1 1 0 111.79-.89c.234.47.489.928.764 1.372.417-.934.752-1.913.997-2.927H3a1 1 0 110-2h3V3a1 1 0 011-1zm6 6a1 1 0 01.894.553l2.991 5.982a.869.869 0 01.02.037l.99 1.98a1 1 0 11-1.79.895L15.383 16h-4.764l-.724 1.447a1 1 0 11-1.788-.894l.99-1.98.019-.038 2.99-5.982A1 1 0 0113 8zm-1.382 6h2.764L13 11.236 11.618 14z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Trash = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\", \"clip-rule\": \"evenodd\" }] } };\nexport const TrendingDown = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M13 17h8m0 0V9m0 8l-8-8-4 4-6-6\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M12 13a1 1 0 100 2h5a1 1 0 001-1V9a1 1 0 10-2 0v2.586l-4.293-4.293a1 1 0 00-1.414 0L8 9.586 3.707 5.293a1 1 0 00-1.414 1.414l5 5a1 1 0 001.414 0L11 9.414 14.586 13H12z\", \"clip-rule\": \"evenodd\" }] } };\nexport const TrendingUp = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M12 7a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0V8.414l-4.293 4.293a1 1 0 01-1.414 0L8 10.414l-4.293 4.293a1 1 0 01-1.414-1.414l5-5a1 1 0 011.414 0L11 10.586 14.586 7H12z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Truck = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M9 17a2 2 0 11-4 0 2 2 0 014 0zM19 17a2 2 0 11-4 0 2 2 0 014 0z\" }, { \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M13 16V6a1 1 0 00-1-1H4a1 1 0 00-1 1v10a1 1 0 001 1h1m8-1a1 1 0 01-1 1H9m4-1V8a1 1 0 011-1h2.586a1 1 0 01.707.293l3.414 3.414a1 1 0 01.293.707V16a1 1 0 01-1 1h-1m-6-1a1 1 0 001 1h1M5 17a2 2 0 104 0m-4 0a2 2 0 114 0m6 0a2 2 0 104 0m-4 0a2 2 0 114 0\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M8 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM15 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0z\" }, { \"d\": \"M3 4a1 1 0 00-1 1v10a1 1 0 001 1h1.05a2.5 2.5 0 014.9 0H10a1 1 0 001-1V5a1 1 0 00-1-1H3zM14 7a1 1 0 00-1 1v6.05A2.5 2.5 0 0115.95 16H17a1 1 0 001-1v-5a1 1 0 00-.293-.707l-2-2A1 1 0 0015 7h-1z\" }] } };\nexport const Upload = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-8l-4-4m0 0L8 8m4-4v12\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM6.293 6.707a1 1 0 010-1.414l3-3a1 1 0 011.414 0l3 3a1 1 0 01-1.414 1.414L11 5.414V13a1 1 0 11-2 0V5.414L7.707 6.707a1 1 0 01-1.414 0z\", \"clip-rule\": \"evenodd\" }] } };\nexport const UserAdd = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M8 9a3 3 0 100-6 3 3 0 000 6zM8 11a6 6 0 016 6H2a6 6 0 016-6zM16 7a1 1 0 10-2 0v1h-1a1 1 0 100 2h1v1a1 1 0 102 0v-1h1a1 1 0 100-2h-1V7z\" }] } };\nexport const UserCircle = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-6-3a2 2 0 11-4 0 2 2 0 014 0zm-2 4a5 5 0 00-4.546 2.916A5.986 5.986 0 0010 16a5.986 5.986 0 004.546-2.084A5 5 0 0010 11z\", \"clip-rule\": \"evenodd\" }] } };\nexport const UserGroup = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3zM6 8a2 2 0 11-4 0 2 2 0 014 0zM16 18v-3a5.972 5.972 0 00-.75-2.906A3.005 3.005 0 0119 15v3h-3zM4.75 12.094A5.973 5.973 0 004 15v3H1v-3a3 3 0 013.75-2.906z\" }] } };\nexport const UserRemove = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M13 7a4 4 0 11-8 0 4 4 0 018 0zM9 14a6 6 0 00-6 6v1h12v-1a6 6 0 00-6-6zM21 12h-6\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M11 6a3 3 0 11-6 0 3 3 0 016 0zM14 17a6 6 0 00-12 0h12zM13 8a1 1 0 100 2h4a1 1 0 100-2h-4z\" }] } };\nexport const User = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Users = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M9 6a3 3 0 11-6 0 3 3 0 016 0zM17 6a3 3 0 11-6 0 3 3 0 016 0zM12.93 17c.046-.327.07-.66.07-1a6.97 6.97 0 00-1.5-4.33A5 5 0 0119 16v1h-6.07zM6 11a5 5 0 015 5v1H1v-1a5 5 0 015-5z\" }] } };\nexport const Variable = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M4.871 4A17.926 17.926 0 003 12c0 2.874.673 5.59 1.871 8m14.13 0a17.926 17.926 0 001.87-8c0-2.874-.673-5.59-1.87-8M9 9h1.246a1 1 0 01.961.725l1.586 5.55a1 1 0 00.961.725H15m1-7h-.08a2 2 0 00-1.519.698L9.6 15.302A2 2 0 018.08 16H8\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M4.649 3.084A1 1 0 015.163 4.4 13.95 13.95 0 004 10c0 1.993.416 3.886 1.164 5.6a1 1 0 01-1.832.8A15.95 15.95 0 012 10c0-2.274.475-4.44 1.332-6.4a1 1 0 011.317-.516zM12.96 7a3 3 0 00-2.342 1.126l-.328.41-.111-.279A2 2 0 008.323 7H8a1 1 0 000 2h.323l.532 1.33-1.035 1.295a1 1 0 01-.781.375H7a1 1 0 100 2h.039a3 3 0 002.342-1.126l.328-.41.111.279A2 2 0 0011.677 14H12a1 1 0 100-2h-.323l-.532-1.33 1.035-1.295A1 1 0 0112.961 9H13a1 1 0 100-2h-.039zm1.874-2.6a1 1 0 011.833-.8A15.95 15.95 0 0118 10c0 2.274-.475 4.44-1.332 6.4a1 1 0 11-1.832-.8A13.949 13.949 0 0016 10c0-1.993-.416-3.886-1.165-5.6z\", \"clip-rule\": \"evenodd\" }] } };\nexport const VideoCamera = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M2 6a2 2 0 012-2h6a2 2 0 012 2v8a2 2 0 01-2 2H4a2 2 0 01-2-2V6zM14.553 7.106A1 1 0 0014 8v4a1 1 0 00.553.894l2 1A1 1 0 0018 13V7a1 1 0 00-1.447-.894l-2 1z\" }] } };\nexport const ViewBoards = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M9 17V7m0 10a2 2 0 01-2 2H5a2 2 0 01-2-2V7a2 2 0 012-2h2a2 2 0 012 2m0 10a2 2 0 002 2h2a2 2 0 002-2M9 7a2 2 0 012-2h2a2 2 0 012 2m0 10V7m0 10a2 2 0 002 2h2a2 2 0 002-2V7a2 2 0 00-2-2h-2a2 2 0 00-2 2\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M2 4a1 1 0 011-1h2a1 1 0 011 1v12a1 1 0 01-1 1H3a1 1 0 01-1-1V4zM8 4a1 1 0 011-1h2a1 1 0 011 1v12a1 1 0 01-1 1H9a1 1 0 01-1-1V4zM15 3a1 1 0 00-1 1v12a1 1 0 001 1h2a1 1 0 001-1V4a1 1 0 00-1-1h-2z\" }] } };\nexport const ViewGridAdd = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M17 14v6m-3-3h6M6 10h2a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v2a2 2 0 002 2zm10 0h2a2 2 0 002-2V6a2 2 0 00-2-2h-2a2 2 0 00-2 2v2a2 2 0 002 2zM6 20h2a2 2 0 002-2v-2a2 2 0 00-2-2H6a2 2 0 00-2 2v2a2 2 0 002 2z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M5 3a2 2 0 00-2 2v2a2 2 0 002 2h2a2 2 0 002-2V5a2 2 0 00-2-2H5zM5 11a2 2 0 00-2 2v2a2 2 0 002 2h2a2 2 0 002-2v-2a2 2 0 00-2-2H5zM11 5a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V5zM14 11a1 1 0 011 1v1h1a1 1 0 110 2h-1v1a1 1 0 11-2 0v-1h-1a1 1 0 110-2h1v-1a1 1 0 011-1z\" }] } };\nexport const ViewGrid = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M5 3a2 2 0 00-2 2v2a2 2 0 002 2h2a2 2 0 002-2V5a2 2 0 00-2-2H5zM5 11a2 2 0 00-2 2v2a2 2 0 002 2h2a2 2 0 002-2v-2a2 2 0 00-2-2H5zM11 5a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V5zM11 13a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z\" }] } };\nexport const ViewList = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M4 6h16M4 10h16M4 14h16M4 18h16\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M3 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z\", \"clip-rule\": \"evenodd\" }] } };\nexport const VolumeOff = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M5.586 15H4a1 1 0 01-1-1v-4a1 1 0 011-1h1.586l4.707-4.707C10.923 3.663 12 4.109 12 5v14c0 .891-1.077 1.337-1.707.707L5.586 15z\", \"clip-rule\": \"evenodd\" }, { \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M17 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M9.383 3.076A1 1 0 0110 4v12a1 1 0 01-1.707.707L4.586 13H2a1 1 0 01-1-1V8a1 1 0 011-1h2.586l3.707-3.707a1 1 0 011.09-.217zM12.293 7.293a1 1 0 011.414 0L15 8.586l1.293-1.293a1 1 0 111.414 1.414L16.414 10l1.293 1.293a1 1 0 01-1.414 1.414L15 11.414l-1.293 1.293a1 1 0 01-1.414-1.414L13.586 10l-1.293-1.293a1 1 0 010-1.414z\", \"clip-rule\": \"evenodd\" }] } };\nexport const VolumeUp = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M15.536 8.464a5 5 0 010 7.072m2.828-9.9a9 9 0 010 12.728M5.586 15H4a1 1 0 01-1-1v-4a1 1 0 011-1h1.586l4.707-4.707C10.923 3.663 12 4.109 12 5v14c0 .891-1.077 1.337-1.707.707L5.586 15z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M9.383 3.076A1 1 0 0110 4v12a1 1 0 01-1.707.707L4.586 13H2a1 1 0 01-1-1V8a1 1 0 011-1h2.586l3.707-3.707a1 1 0 011.09-.217zM14.657 2.929a1 1 0 011.414 0A9.972 9.972 0 0119 10a9.972 9.972 0 01-2.929 7.071 1 1 0 01-1.414-1.414A7.971 7.971 0 0017 10c0-2.21-.894-4.208-2.343-5.657a1 1 0 010-1.414zm-2.829 2.828a1 1 0 011.415 0A5.983 5.983 0 0115 10a5.984 5.984 0 01-1.757 4.243 1 1 0 01-1.415-1.415A3.984 3.984 0 0013 10a3.983 3.983 0 00-1.172-2.828 1 1 0 010-1.415z\", \"clip-rule\": \"evenodd\" }] } };\nexport const Wifi = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M8.111 16.404a5.5 5.5 0 017.778 0M12 20h.01m-7.08-7.071c3.904-3.905 10.236-3.905 14.141 0M1.394 9.393c5.857-5.857 15.355-5.857 21.213 0\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M17.778 8.222c-4.296-4.296-11.26-4.296-15.556 0A1 1 0 01.808 6.808c5.076-5.077 13.308-5.077 18.384 0a1 1 0 01-1.414 1.414zM14.95 11.05a7 7 0 00-9.9 0 1 1 0 01-1.414-1.414 9 9 0 0112.728 0 1 1 0 01-1.414 1.414zM12.12 13.88a3 3 0 00-4.242 0 1 1 0 01-1.415-1.415 5 5 0 017.072 0 1 1 0 01-1.415 1.415zM9 16a1 1 0 011-1h.01a1 1 0 110 2H10a1 1 0 01-1-1z\", \"clip-rule\": \"evenodd\" }] } };\nexport const XCircle = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\", \"clip-rule\": \"evenodd\" }] } };\nexport const X = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M6 18L18 6M6 6l12 12\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\", \"clip-rule\": \"evenodd\" }] } };\nexport const ZoomIn = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0zM10 7v3m0 0v3m0-3h3m-3 0H7\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"d\": \"M5 8a1 1 0 011-1h1V6a1 1 0 012 0v1h1a1 1 0 110 2H9v1a1 1 0 11-2 0V9H6a1 1 0 01-1-1z\" }, { \"fill-rule\": \"evenodd\", \"d\": \"M2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8zm6-4a4 4 0 100 8 4 4 0 000-8z\", \"clip-rule\": \"evenodd\" }] } };\nexport const ZoomOut = { \"default\": { \"a\": { \"fill\": \"none\", \"viewBox\": \"0 0 24 24\", \"stroke\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"2\", \"d\": \"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0zM13 10H7\" }] }, \"solid\": { \"a\": { \"viewBox\": \"0 0 20 20\", \"fill\": \"currentColor\", \"aria-hidden\": \"true\" }, \"path\": [{ \"fill-rule\": \"evenodd\", \"d\": \"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\", \"clip-rule\": \"evenodd\" }, { \"fill-rule\": \"evenodd\", \"d\": \"M5 8a1 1 0 011-1h4a1 1 0 110 2H6a1 1 0 01-1-1z\", \"clip-rule\": \"evenodd\" }] } };\n","<script>\n    export let documentNode;\n    export let projectId;\n\n    import DocumentNode from '../classes/DocumentNode';\n    import {Icon} from '@steeze-ui/svelte-icon';\n    import { ChevronLeft, ChevronDown, DocumentAdd } from '@steeze-ui/heroicons';\n    import { link } from \"svelte-spa-router\";\n\n    let isOpen = false;\n\n    function toggleOpen() {\n        isOpen = !isOpen;\n    }\n\n    function addDocument() {\n        // This strange syntax is due to quirks with how reactivity works in most frontend \n        // frameworks... See https://svelte.dev/tutorial/updating-arrays-and-objects for details.\n        documentNode.childDocuments = [...documentNode.childDocuments, new DocumentNode()];\n        isOpen = true;\n    }\n</script>\n\n<!-- This is intented to be used withing the context of a UL or OL element -->\n<li>\n    <div>\n        <a href={`/editor/${projectId}/${documentNode.id}`} use:link>\n            { documentNode.title }\n        </a>\n        <span on:click={addDocument}>\n            <Icon src={DocumentAdd} theme=\"outline\" width=\"16px\" height=\"16px\" />\n        </span>\n        {#if documentNode.childDocuments.length > 0}\n            <span on:click={toggleOpen}>\n                {#if isOpen}\n                    <Icon src={ChevronDown} theme='solid' width=\"20px\" height=\"20px\"/>\n                {:else}\n                    <Icon src={ChevronLeft} theme='solid' width=\"20px\" height=\"20px\"/>\n                {/if}\n            </span>\n        {/if}\n    </div>\n    <ul>\n        {#if isOpen}\n            {#each documentNode.childDocuments as childDocument }\n                <svelte:self projectId={projectId} documentNode={childDocument} /> \n            {/each}\n        {/if}\n    </ul>\n</li>","<script>\n    import DocumentNodeElement from \"./DocumentNodeElement.svelte\";\n    export let project;\n</script>\n\n<div>\n    <h2>Overview</h2>\n    <ul>\n        <DocumentNodeElement projectId={project.id} documentNode={project.rootDocumentNode} />\n    </ul>\n</div>\n\n<style>\n    div {\n        border-right: 1px solid #EEE;\n    }\n</style>","import DocumentNode from \"./DocumentNode\";\n\nexport async function loadProject() {\n    let output = await window.electronAPI.loadProject();\n    let project = parserProject(output);\n    return project;\n}\n\nexport async function saveProject(project) {\n    window.electronAPI.saveProject(project);\n}\n\nfunction parserProject(json) {\n    let project = new Project();\n    project.id = json.id;\n    project.rootDocumentNode = buildDocumentNode(json.rootDocumentNode);\n    return project;\n}\n\nfunction buildDocumentNode(docNode) {\n    let documentNode = new DocumentNode();\n    documentNode.id = docNode.id;\n    documentNode.title = docNode.title;\n    documentNode.content = docNode.content;\n\n    docNode.childDocuments.forEach(element => {\n        documentNode.childDocuments.push(buildDocumentNode(element));\n    });\n\n    return documentNode;\n}\n\nexport default class Project {\n    constructor(rootDocumentNode) {\n        this.id = \"fsdaffasdfasdfsad\";\n        this.rootDocumentNode = rootDocumentNode;\n    }\n\n    findDocumentById(id) {\n\n        let searchQueue = [];\n        searchQueue.push(this.rootDocumentNode);\n\n        while(searchQueue.length > 0) {\n            const currentDocument = searchQueue.shift();\n            if(currentDocument.id === id) {\n                return currentDocument;\n            }\n\n            currentDocument.childDocuments.forEach(element => {\n                searchQueue.push(element);\n            });\n        }\n\n        return null;\n    }\n}","<script>\n    export let documentNode;\n\n</script>\n{#if documentNode}\n<input type=\"text\" bind:value={documentNode.title}/>\n<div contenteditable=\"true\" bind:innerHTML={ documentNode.content }>\n    Hello\n</div>\n{:else}\n    <h2>Invalid Document. Please try again.</h2>\n{/if}\n\n<style>\n    div {\n        width: 100%;\n        height: 100%;\n        background-color: #CCCCCC;\n    }\n</style>","<script>\nexport let params;\n\nimport Sidebar from \"../lib/editor/sidebar/Sidebar.svelte\";\nimport { saveProject, loadProject }  from \"../lib/editor/classes/Project.js\";\nimport DocumentPage from \"../lib/editor/page/DocumentPage.svelte\";\nimport { onMount } from \"svelte\";\n\nlet project;\n\nonMount(async () => {\n    project = await loadProject();\n});\n\nfunction getDocumentId(params) {\n    if(params.documentId === undefined || params.documentId === null) {\n        console.log(project.rootDocumentNode)\n        return project.rootDocumentNode.id;\n    }\n    return params.documentId;\n}\n\nfunction _saveProject() {\n    saveProject(project);\n}\n\n\n</script>\n\n{#if project}\n<main>\n    <button on:click={_saveProject}>Save</button>\n    <section>\n        <aside>\n            <Sidebar project={project} />\n        </aside>\n        <article>\n            <DocumentPage documentNode={ project.findDocumentById(getDocumentId(params)) } />\n        </article>\n    </section>\n    <footer>\n        Saving\n    </footer>\n</main>\n\n{/if}\n\n<style>\n    main > section {\n        display: grid;\n        grid-template-columns: 4fr 8fr;\n    }\n\n    main > section > article > div {\n        width: 100%;\n        height: 100%;\n    }\n</style>","<script>\n  import Router, {location, link} from 'svelte-spa-router';\n  import Home from './pages/Home.svelte';\n  import Editor from './pages/Editor.svelte';\n</script>\n\n<main>\n  <Router routes={{\n    '/': Home,\n    '/editor/:projectId/:documentId': Editor,\n    '/editor/:projectId': Editor,\n  }} />\n  \n  <hr>\n  /#{$location}\n</main>\n\n<style>\n\n</style>\n","import App from './App.svelte';\nimport \"normalize.css\";\nimport \"./app.css\";\n\nconst app = new App({\n  target: document.getElementById('app')\n})\n\nexport default app\n"],"names":["wrap","_wrap"],"mappings":"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"}